<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenTouryo.Public</name>
    </assembly>
    <members>
        <member name="T:Touryo.Infrastructure.Public.Db.BaseDam">
            <summary>データアクセス制御クラスのベースクラス</summary>
            <remarks>ベース型として利用する。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.BaseDam._sqlHt">
            <summary>
            SQLをキャッシュする
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.BaseDam._lock">
            <summary>
            排他のためのクラス変数
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.BaseDam._obj">
            <summary>任意の領域</summary>
            <remarks>自由に利用できる（通常SQLトレース詳細化用フィールドで利用）</remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Db.BaseDam.Obj">
            <summary>任意の領域</summary>
            <remarks>自由に利用できる（通常SQLトレース詳細化用フィールドで利用）</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.BaseDam._xml">
            <summary>DPQをXMLドキュメントとして保持する。</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Db.BaseDam.Xml">
            <summary>DPQのXMLドキュメントを取得する。</summary>
            <remarks>自由に利用できる</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.BaseDam._QueryStatus">
            <summary>SQLが動的パラメタライズド クエリであるかどうかのチェック結果</summary>
            <remarks>派生のDamXXXから利用する。</remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Db.BaseDam.IsDPQ">
            <summary>クラスの外から参照可能にする。</summary>
            <remarks>利用箇所：DPQuery_Toolから利用</remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Db.BaseDam.DamIDbCommand">
            <summary>
            Property for IDbCommand to support multiple db
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.BaseDam._parameter">
            <summary>
            SQLが動的パラメタライズド クエリである場合、
            指定されたパラメータ（の値）を保持するディクショナリ
            </summary>
            <remarks>派生のDamXXXから利用する。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.BaseDam._parameterType">
            <summary>
            SQLが動的パラメタライズド クエリである場合、
            指定されたパラメータ（の型）を保持するディクショナリ
            </summary>
            <remarks>派生のDamXXXから利用する。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.BaseDam._parameterSize">
            <summary>
            SQLが動的パラメタライズド クエリである場合、
            指定されたパラメータ（のサイズ）を保持するディクショナリ
            </summary>
            <remarks>派生のDamXXXから利用する。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.BaseDam._parameterDirection">
            <summary>
            SQLが動的パラメタライズド クエリである場合、
            指定されたパラメータ（の方向）を保持するディクショナリ
            </summary>
            <remarks>派生のDamXXXから利用する。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.BaseDam._userParameter">
            <summary>
            SQLが動的パラメタライズド クエリである場合、
            指定されたユーザ パラメータを保持するディクショナリ
            </summary>
            <remarks>派生のDamXXXから利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.init">
            <summary>
            初期化メソッド（SQLを連続で実行する場合に必要）
            SetSqlByCommandメソッドで実行する。
            </summary>
            <remarks>派生のDamXXXから利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.SetCommandTimeout(System.Data.IDbCommand)">
            <summary>システム共通のCommandTimeout値を設定する。</summary>
            <param name="cmd">Commandオブジェクト</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.Load(System.String)">
            <summary>SQLファイルから、SQL文を読み込む。</summary>
            <param name="sqlFilePath">SQLファイルのフルパス</param>
            <returns>SQL文</returns>
            <remarks>派生のDamXXXから利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.Load2(System.String)">
            <summary>SQLファイルから、SQL文を読み込む。</summary>
            <param name="sqlFilePath">SQLファイルのフルパス</param>
            <returns>SQL文</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.CheckCommandText(System.String)">
            <summary>
            指定されたコマンド テキストが、
            動的パラメタライズド クエリであるか確認する。
            </summary>
            <param name="commandText">コマンド テキスト</param>
            <remarks>派生のDamXXXから利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.Scan(System.Xml.XmlNode)">
            <summary>
            動的パラメタライズド クエリであるか確認するメソッド
            構文を大まかに確認する。
            </summary>
            <param name="xmlNode1">ROOTノード</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.Convert(System.Char)">
            <summary>
            動的パラメタライズド クエリを
            通常のパラメタライズド クエリに変換するメソッド
            </summary>
            <param name="paramSign">パラメタの先頭記号（DBMSによって可変）</param>
            <returns>変換後の通常のパラメタライズド クエリ</returns>
            <remarks>派生のDamXXXから利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ReplaceVALTag">
            <summary>VALタグを対応する値で置換する。</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ProcessINSCOLTag">
            <summary>INSCOLタグを処理する。</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ProcessIFTag(System.Char)">
            <summary>IF(ELSE)タグを処理する。</summary>
            <param name="paramSign">パラメタの先頭記号（DBMSによって可変）</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ProcessSelectCaseDefaultTag">
            <summary>SELECT-CASE-DEFAULTタグを処理</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ProcessSelectCaseDefaultTag(System.Xml.XmlNode,System.String)">
            <summary>CASE-DEFAULTタグを処理</summary>
            <param name="xmlNodeSelectTag">SELECTタグ</param>
            <param name="param">指定された文字列</param>
            <returns>選択されたCASE-DEFAULTタグのInnerText</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ProcessLISTTag(System.Char)">
            <summary>LISTタグを処理する。</summary>
            <param name="paramSign">パラメタの先頭記号（DBMSによって可変）</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ProcessJoinSubWhereTag">
            <summary>
            JOIN、SUB、WHEREタグを削除する。
            </summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ProcessJoinSubWhereTag2(System.Xml.XmlNode)">
            <summary>
            JOIN、SUB、WHEREタグを削除する。
            再帰で末端ノードのJOIN、SUB、WHEREタグから処理する。
            </summary>
            <param name="xmlNodeJoinSubWhereTag">JOIN、SUB、WHEREタグ</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ProcessJoinTag(System.Xml.XmlNode)">
            <summary>JOINタグを処理</summary>
            <param name="xmlNodeJoinTag">末端のJOINタグ</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ProcessSubTag(System.Xml.XmlNode)">
            <summary>SUBタグを処理</summary>
            <param name="xmlNodeSubTag">末端のSUBタグ</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ProcessWhereTag(System.Xml.XmlNode)">
            <summary>WHEREタグを処理</summary>
            <param name="xmlNodeWhereTag">末端のWHEREタグ</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.DeleteFirstLogicalOperatoronWhereClause(System.String)">
            <summary>Where句の最初の論理演算子を削除する</summary>
            <param name="where">処理対象のWhere句</param>
            <returns>処理後のWhere句</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ProcessDELCMATag">
            <summary>DELCMAタグを処理する。</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.DeleteParamTag">
            <summary>
            PARAMタグを削除する。
            </summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.GetParamByText(System.String,System.Char)">
            <summary>
            テキスト内のパラメタ名を取得
            </summary>
            <param name="text">テキスト</param>
            <param name="paramSign">パラメタの先頭記号（DBMSによって可変）</param>
            <returns>パラメタ名</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.GetParamByText(System.String,System.Char,System.Int32@)">
            <summary>
            テキスト内のパラメタ名を取得<br/>
            本メソッドで返却するパラメタ名は、パラメタの先頭記号を含まない<br/>
            </summary>
            <param name="text">テキスト</param>
            <param name="paramSign">パラメタの先頭記号（DBMSによって可変）</param>
            <param name="outParamSignIndex">パラメタの先頭記号のインデックス。検出されない場合、-1を返却。</param>
            <returns>パラメタ名。検出されない場合、先頭記号のみのパラメタ("@"のみ)の場合は""を返却する。</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.GetIndent(System.String)">
            <summary>
            テキストの先頭インデントを取得する。
            </summary>
            <param name="text">テキスト</param>
            <returns>インデント</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.GetParametersFromPARAMTag">
            <summary>
            PARAMタグ・PARAMコメントのパラメタ（文字列表現）
            を、パラメタの一覧（DataTable）に変換する。
            </summary>
            <returns>パラメタの一覧（DataTable）</returns>
            <remarks>利用箇所：DPQuery_Toolから利用</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.StringToParameter(System.String,System.Data.DataTable)">
            <summary>
            １パラメタ分の文字列表現をパラメタに変換し、
            パラメタの一覧（DataTable）に追加する。
            </summary>
            <param name="paramString">１パラメタ分の文字列表現</param>
            <param name="dt">パラメタの一覧（DataTable）</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.StringToObject(System.String,System.String)">
            <summary>
            文字列（型情報、値情報）を値に変換
            </summary>
            <param name="typeString">文字列（型情報）</param>
            <param name="valString">文字列（値情報）</param>
            <returns>値</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ClearText(System.String)">
            <summary>
            1行ログ出力用整形
            
            仕様については下記を参照
            StringConverter.FormattingForOneLineLog
            </summary>
            <param name="text">テキスト</param>
            <returns>処理後のテキスト</returns>
            <remarks>派生のDamXXXから利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ConnectionOpen(System.String)">
            <summary>コネクションの確立</summary>
            <param name="connstring">接続文字列</param>
            <remarks>派生のDamXXXでオーバーライドする。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ConnectionClose">
            <summary>コネクションの切断</summary>
            <remarks>派生のDamXXXでオーバーライドする。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.BeginTransaction(Touryo.Infrastructure.Public.Db.DbEnum.IsolationLevelEnum)">
            <summary>トランザクション開始</summary>
            <param name="iso">分離レベル</param>
            <remarks>派生のDamXXXでオーバーライドする。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.CommitTransaction">
            <summary>トランザクションのコミット</summary>
            <remarks>派生のDamXXXでオーバーライドする。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.RollbackTransaction">
            <summary>トランザクションのロールバック</summary>
            <remarks>派生のDamXXXでオーバーライドする。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.SetSqlByFile(System.String)">
            <summary>SQL文を記述したファイルへのパスを設定して、Commandオブジェクトを生成。</summary>
            <param name="sqlFilePath">SQL文を記述したファイルへのパス</param>
            <remarks>派生のDamXXXでオーバーライドする。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.SetSqlByFile(System.String,System.Data.CommandType)">
            <summary>SQL文を記述したファイルへのパスとCommandTypeを設定して、Commandオブジェクトを生成。</summary>
            <param name="sqlFilePath">SQL文を記述したファイルへのパス</param>
            <param name="commandType">コマンドの種類</param>
            <remarks>派生のDamXXXでオーバーライドする。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.SetSqlByCommand(System.String)">
            <summary>SQL文を設定して、Commandオブジェクトを生成。</summary>
            <param name="commandText">実行するSQL文</param>
            <remarks>派生のDamXXXでオーバーライドする。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.SetSqlByCommand(System.String,System.Data.CommandType)">
            <summary>SQL文とCommandTypeを設定して、Commandオブジェクトを生成。</summary>
            <param name="commandText">実行するSQL文</param>
            <param name="commandType">コマンドの種類</param>
            <remarks>派生のDamXXXでオーバーライドする。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.GetParameter(System.String)">
            <summary>パラメタライズドクエリのパラメタを取得する（Out,RetValパラメタ用）。</summary>
            <param name="parameterName">パラメタライズドクエリのパラメタ名</param>
            <returns>Out,RetValパラメタのバリュー</returns>
            <remarks>
            派生のDamXXXでオーバーライドする。
            動的SQLの場合はSQL実行後に利用可能
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.SetParameter(System.String,System.Object)">
            <summary>パラメタライズドクエリにパラメタを設定する。</summary>
            <param name="parameterName">パラメタライズドクエリのパラメタ名</param>
            <param name="obj">パラメタの値</param>
            <remarks>派生のDamXXXでオーバーライドする。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.SetParameter(System.String,System.Object,System.Object)">
            <summary>パラメタライズドクエリにパラメタを設定する。</summary>
            <param name="parameterName">パラメタライズドクエリのパラメタ名</param>
            <param name="obj">パラメタの値</param>
            <param name="dbTypeInfo">パラメタの型（データプロバイダ固有）</param>
            <remarks>派生のDamXXXでオーバーライドする。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.SetParameter(System.String,System.Object,System.Object,System.Int32)">
            <summary>パラメタライズドクエリにパラメタを設定する。</summary>
            <param name="parameterName">パラメタライズドクエリのパラメタ名</param>
            <param name="obj">パラメタの値</param>
            <param name="dbTypeInfo">パラメタの型（HiRDBType）</param>
            <param name="size">パラメタのサイズ</param>
            <remarks>派生のDamXXXでオーバーライドする。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.SetParameter(System.String,System.Object,System.Object,System.Int32,System.Data.ParameterDirection)">
            <summary>パラメタライズドクエリにパラメタを設定する。</summary>
            <param name="parameterName">パラメタライズドクエリのパラメタ名</param>
            <param name="obj">パラメタの値</param>
            <param name="dbTypeInfo">パラメタの型（HiRDBType）</param>
            <param name="size">パラメタのサイズ</param>
            <param name="paramDirection">パラメタの方向</param>
            <remarks>派生のDamXXXでオーバーライドする。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.SetUserParameter(System.String,System.String)">
            <summary>ユーザパラメタを指定の文字列で置換する。</summary>
            <param name="userParameterName">置換対象のユーザパラメタ名</param>
            <param name="userParameterValue">置換の文字列</param>
            <remarks>
            SQLインジェクションされる可能性があるユーザ入力は「userParameterValue」に指定しないこと。
            派生のDamXXXでオーバーライドする。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ExecSelectFill_DT(System.Data.DataTable)">
            <summary>Selectクエリを実行し、データテーブルを返す。</summary>
            <param name="dt">データテーブル</param>
            <remarks>
            DataAdapterのFillを実行する。
            派生のDamXXXでオーバーライドする。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ExecSelectFill_DS(System.Data.DataSet)">
            <summary>Selectクエリを実行し、データセットを返す。</summary>
            <param name="ds">データセット</param>
            <remarks>
            DataAdapterのFillを実行する。
            ※ データプロバイダによっては、サーバカーソルをサポートする。
            派生のDamXXXでオーバーライドする。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ExecSelect_DR">
            <summary>Selectクエリを実行し、データリーダを返す。</summary>
            <returns>データリーダ</returns>
            <remarks>
            CommandのExecuteReaderを実行する。
            派生のDamXXXでオーバーライドする。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ExecSelectScalar">
            <summary>Selectクエリを実行し、結果セットの最初の行の最初の列を返す。</summary>
            <returns>結果セットの最初の行の最初の列（オブジェクト型） </returns>
            <remarks>
            CommandのExecuteScalarを実行する。
            派生のDamXXXでオーバーライドする。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ExecInsUpDel_NonQuery">
            <summary>Insert、Update、Deleteクエリを実行し、影響を受けた行数を返す。</summary>
            <returns>影響を受けた行数</returns>
            <remarks>
            CommandのExecuteNonQueryを実行する。
            派生のDamXXXでオーバーライドする。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.ExecGenerateSQL(Touryo.Infrastructure.Public.Db.SQLUtility)">
            <summary>静的SQLを生成する</summary>
            <param name="sqlUtil">SQLUtility</param>
            <returns>SQL文</returns>
            <remarks>
            Commandでの実行はしない。
            派生のDamXXXでオーバーライドする。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.GetCurrentQuery">
            <summary>
            現在コマンドオブジェクトに設定されているSQLを取得する。
            </summary>
            <returns>現在コマンドオブジェクトに設定されているSQL</returns>
            <remarks>派生のDamXXXでオーバーライドする。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.BaseDam.GetCurrentQueryForLog">
            <summary>
            現在コマンドオブジェクトに設定されているSQLを取得する（ログ出力用）。
            </summary>
            <returns>現在コマンドオブジェクトに設定されているSQL（ログ出力用）</returns>
            <remarks>派生のDamXXXでオーバーライドする。</remarks>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Db.DamODBC">
            <summary>データアクセス・プロバイダ＝Odbcのデータアクセス制御クラス</summary>
            <remarks>必要なメソッド・プロパティを利用する</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DamODBC._paramSign">
            <summary>パラメタの先頭記号（OLEDBは順番バインド（？）のみなので本部品で対応（@P1））</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DamODBC._cnn">
            <summary>コネクション</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DamODBC._tx">
            <summary>トランザクション</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DamODBC._cmd">
            <summary>コマンド</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DamODBC._adpt">
            <summary>アダプタ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DamODBC._iso">
            <summary>分離レベル</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Db.DamODBC.DamOdbcConnection">
            <summary>OdbcConnection（読み取り専用）</summary>
            <remarks>必要に応じて利用する。</remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Db.DamODBC.DamOdbcDataAdapter">
            <summary>OdbcDataAdapter（読み取り専用）</summary>
            <remarks>
            利用時、コネクション、トランザクションが有効な状態になっている事
            必要に応じて利用する。
            </remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Db.DamODBC.DamOdbcCommand">
            <summary>OdbcCommand（読み取り専用）</summary>
            <remarks>必要に応じて利用する。</remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Db.DamODBC.DamIDbCommand">
            <summary>
            Property for IDbCommand to support multiple db
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Db.DamODBC.DamOdbcTransaction">
            <summary>OdbcTransaction（読み取り専用）</summary>
            <remarks>必要に応じて利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.ConnectionOpen(System.String)">
            <summary>コネクションの確立</summary>
            <param name="connstring">接続文字列</param>
            <remarks>必要に応じて利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.ConnectionClose">
            <summary>コネクションの切断</summary>
            <remarks>必要に応じて利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.BeginTransaction(Touryo.Infrastructure.Public.Db.DbEnum.IsolationLevelEnum)">
            <summary>トランザクション開始</summary>
            <param name="iso">分離レベル（内部プロバイダによるので全てサポート）</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.CommitTransaction">
            <summary>トランザクションのコミット</summary>
            <remarks>必要に応じて利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.RollbackTransaction">
            <summary>トランザクションのロールバック</summary>
            <remarks>必要に応じて利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.SetSqlByFile(System.String)">
            <summary>SQL文を記述したファイルへのパスを設定して、Commandオブジェクトを生成。</summary>
            <param name="sqlFilePath">SQL文を記述したファイルへのパス</param>
            <remarks>通常、Ｄａｏ経由で利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.SetSqlByFile(System.String,System.Data.CommandType)">
            <summary>SQL文を記述したファイルへのパスとCommandTypeを設定して、Commandオブジェクトを生成。</summary>
            <param name="sqlFilePath">SQL文を記述したファイルへのパス</param>
            <param name="commandType">コマンドの種類</param>
            <remarks>通常、Ｄａｏ経由で利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.SetSqlByCommand(System.String)">
            <summary>SQL文を設定して、Commandオブジェクトを生成。</summary>
            <param name="commandText">実行するSQL文</param>
            <remarks>通常、Ｄａｏ経由で利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.SetSqlByCommand(System.String,System.Data.CommandType)">
            <summary>SQL文とCommandTypeを設定して、Commandオブジェクトを生成。</summary>
            <param name="commandText">実行するSQL文</param>
            <param name="commandType">コマンドの種類</param>
            <remarks>通常、Ｄａｏ経由で利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.GetParameter(System.String)">
            <summary>パラメタライズドクエリのパラメタを取得する（Out,RetValパラメタ用）。</summary>
            <param name="parameterName">パラメタライズドクエリのパラメタ名</param>
            <returns>Out,RetValパラメタのバリュー</returns>
            <remarks>
            通常、Ｄａｏ経由で利用する。
            動的SQLの場合はSQL実行後に利用可能
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.SetParameter(System.String,System.Object)">
            <summary>パラメタライズドクエリにパラメタを設定する。</summary>
            <param name="parameterName">パラメタライズドクエリのパラメタ名</param>
            <param name="obj">パラメタの値</param>
            <remarks>通常、Ｄａｏ経由で利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.SetParameter(System.String,System.Object,System.Object)">
            <summary>パラメタライズドクエリにパラメタを設定する。</summary>
            <param name="parameterName">パラメタライズドクエリのパラメタ名</param>
            <param name="obj">パラメタの値</param>
            <param name="dbTypeInfo">パラメタの型（OdbcType）（設定しない場合は、nullを指定）</param>
            <remarks>通常、Ｄａｏ経由で利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.SetParameter(System.String,System.Object,System.Object,System.Int32)">
            <summary>パラメタライズドクエリにパラメタを設定する。</summary>
            <param name="parameterName">パラメタライズドクエリのパラメタ名</param>
            <param name="obj">パラメタの値</param>
            <param name="dbTypeInfo">パラメタの型（OdbcType）（設定しない場合は、nullを指定）</param>
            <param name="size">パラメタのサイズ（設定しない場合は、-1を指定）</param>
            <remarks>通常、Ｄａｏ経由で利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.SetParameter(System.String,System.Object,System.Object,System.Int32,System.Data.ParameterDirection)">
            <summary>パラメタライズドクエリにパラメタを設定する。</summary>
            <param name="parameterName">パラメタライズドクエリのパラメタ名</param>
            <param name="obj">パラメタの値</param>
            <param name="dbTypeInfo">パラメタの型（OdbcType）（設定しない場合は、nullを指定）</param>
            <param name="size">パラメタのサイズ（設定しない場合は、-1を指定）</param>
            <param name="paramDirection">パラメタの方向</param>
            <remarks>通常、Ｄａｏ経由で利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.SetUserParameter(System.String,System.String)">
            <summary>ユーザパラメタを指定の文字列で置換する。</summary>
            <param name="userParameterName">置換対象のユーザパラメタ名</param>
            <param name="userParameterValue">置換の文字列</param>
            <remarks>
            SQLインジェクションされる可能性があるユーザ入力は「userParameterValue」に指定しないこと。
            通常、Ｄａｏ経由で利用する。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.PreExecQuery">
            <summary>
            SQL実行前の、
            ・通常のパラメタライズド クエリ
            ・動的パラメタライズド クエリ
            制御用メソッド
            </summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.ChangesToOrderBind">
            <summary>
            通常のパラメタライズド クエリの
            「名前バインド」を「順番バインド」に置換する。
            </summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.ExecSelectFill_DT(System.Data.DataTable)">
            <summary>Selectクエリを実行し、データテーブルを返す。</summary>
            <param name="dt">データテーブル</param>
            <remarks>
            OdbcDataAdapterのFillを実行する。
            通常、Ｄａｏ経由で利用する。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.ExecSelectFill_DS(System.Data.DataSet)">
            <summary>Selectクエリを実行し、データセットを返す。</summary>
            <param name="ds">データセット</param>
            <remarks>
            OdbcDataAdapterのFillを実行する。
            通常、Ｄａｏ経由で利用する。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.ExecSelect_DR">
            <summary>Selectクエリを実行し、データリーダを返す。</summary>
            <returns>OdbcDataReader</returns>
            <remarks>
            OdbcCommandのExecuteReaderを実行する。
            通常、Ｄａｏ経由で利用する。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.ExecSelectScalar">
            <summary>Selectクエリを実行し、結果セットの最初の行の最初の列を返す。</summary>
            <returns>結果セットの最初の行の最初の列（オブジェクト型） </returns>
            <remarks>
            OdbcCommandのExecuteScalarを実行する。
            通常、Ｄａｏ経由で利用する。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.ExecInsUpDel_NonQuery">
            <summary>Insert、Update、Deleteクエリを実行し、影響を受けた行数を返す。</summary>
            <returns>影響を受けた行数</returns>
            <remarks>
            OdbcCommandのExecuteNonQueryを実行する。
            通常、Ｄａｏ経由で利用する。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.ExecGenerateSQL(Touryo.Infrastructure.Public.Db.SQLUtility)">
            <summary>静的SQLを生成する</summary>
            <param name="sqlUtil">SQLUtility</param>
            <returns>SQL文</returns>
            <remarks>
            Commandでの実行はしない。
            通常、Ｄａｏ経由で利用する。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.GetCurrentQuery">
            <summary>現在コマンドオブジェクトに設定されているSQLを取得する。</summary>
            <returns>現在コマンドオブジェクトに設定されているSQL</returns>
            <remarks>必要に応じて利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamODBC.GetCurrentQueryForLog">
            <summary>現在コマンドオブジェクトに設定されているSQLを取得する（ログ出力用に編集したもの）。</summary>
            <returns>現在コマンドオブジェクトに設定されているSQL（ログ出力用に編集したもの）</returns>
            <remarks>必要に応じて利用する。</remarks>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Db.DamSqlSvr">
            <summary>データアクセス・プロバイダ＝SqlClientのデータアクセス制御クラス</summary>
            <remarks>必要なメソッド・プロパティを利用する</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DamSqlSvr._paramSign">
            <summary>パラメタの先頭記号（DBMSによって可変）</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DamSqlSvr._cnn">
            <summary>コネクション</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DamSqlSvr._tx">
            <summary>トランザクション</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DamSqlSvr._cmd">
            <summary>コマンド</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DamSqlSvr._adpt">
            <summary>アダプタ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DamSqlSvr._iso">
            <summary>分離レベル</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Db.DamSqlSvr.DamSqlConnection">
            <summary>SqlConnection（読み取り専用）</summary>
            <remarks>必要に応じて利用する。</remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Db.DamSqlSvr.DamSqlDataAdapter">
            <summary>SqlDataAdapter（読み取り専用）</summary>
            <remarks>
            利用時、コネクション、トランザクションが有効な状態になっている事
            必要に応じて利用する。
            </remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Db.DamSqlSvr.DamSqlCommand">
            <summary>SqlCommand（読み取り専用）</summary>
            <remarks>必要に応じて利用する。</remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Db.DamSqlSvr.DamIDbCommand">
            <summary>
            Property for IDbCommand to support multiple db
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Db.DamSqlSvr.DamSqlTransaction">
            <summary>SqlTransaction（読み取り専用）</summary>
            <remarks>必要に応じて利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.ConnectionOpen(System.String)">
            <summary>コネクションの確立</summary>
            <param name="connstring">接続文字列</param>
            <remarks>必要に応じて利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.ConnectionClose">
            <summary>コネクションの切断</summary>
            <remarks>必要に応じて利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.BeginTransaction(Touryo.Infrastructure.Public.Db.DbEnum.IsolationLevelEnum)">
            <summary>トランザクション開始</summary>
            <param name="iso">
            分離レベル
             1. NoTransaction:トランザクションを開始しない。
             2. DefaultTransaction:規定の分離レベルでトランザクションを開始する。
             3. ReadUncommitted:非コミット読み取りの分離レベルでトランザクションを開始する。
             4. ReadCommitted:コミット済み読み取りの分離レベルでトランザクションを開始する。
             5. RepeatableRead:反復可能読み取りの分離レベルでトランザクションを開始する。
             6. Serializable:直列化可能の分離レベルでトランザクションを開始する。
             7. Snapshot:スナップショット分離レベルでトランザクションを開始する（SQL Server2005からの機能）。
            </param>
            <remarks>
            ○ 基本的に「ReadCommitted」で良い。
            ○ 参照データしたデータが、Tx中に変更されては困る場合のみ、次の分離レベルを使用する。
               1. 「RepeatableRead」：Tx中、参照したデータの共有ロックが持続され、変更されない。
               2. 「Serializable」：Tx中、検索したキー範囲のロックが持続され、変更されない。
               3. 「Snapshot」：上記1.、2.の分離レベルでは同時実効性に問題がある時に使用する。
                ※ SQL Server2005からの機能であり、DBの設定でSnapshotを有効にする必要がある。
                ※ 上記（3.）の方式は、悲観排他方式（ホールドロック）を使用できないので注意する。
            ○ ノートランザクションは、通常、デフォルトの分離レベルの「ReadCommitted」の自動コミットになる。
            ○ デッドロックになりかねないとき、参照時、更新ロックを使用する。
            ○「ReadUncommitted」はダーティーリードのため、基本的に使用しない。
            必要に応じて利用する。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.CommitTransaction">
            <summary>トランザクションのコミット</summary>
            <remarks>必要に応じて利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.RollbackTransaction">
            <summary>トランザクションのロールバック</summary>
            <remarks>必要に応じて利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.SetSqlByFile(System.String)">
            <summary>SQL文を記述したファイルへのパスを設定して、Commandオブジェクトを生成。</summary>
            <param name="sqlFilePath">SQL文を記述したファイルへのパス</param>
            <remarks>通常、Ｄａｏ経由で利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.SetSqlByFile(System.String,System.Data.CommandType)">
            <summary>SQL文を記述したファイルへのパスとCommandTypeを設定して、Commandオブジェクトを生成。</summary>
            <param name="sqlFilePath">SQL文を記述したファイルへのパス</param>
            <param name="commandType">コマンドの種類</param>
            <remarks>通常、Ｄａｏ経由で利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.SetSqlByCommand(System.String)">
            <summary>SQL文を設定して、Commandオブジェクトを生成。</summary>
            <param name="commandText">実行するSQL文</param>
            <remarks>通常、Ｄａｏ経由で利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.SetSqlByCommand(System.String,System.Data.CommandType)">
            <summary>SQL文とCommandTypeを設定して、Commandオブジェクトを生成。</summary>
            <param name="commandText">実行するSQL文</param>
            <param name="commandType">コマンドの種類</param>
            <remarks>通常、Ｄａｏ経由で利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.GetParameter(System.String)">
            <summary>パラメタライズドクエリのパラメタを取得する（Out,RetValパラメタ用）。</summary>
            <param name="parameterName">パラメタライズドクエリのパラメタ名</param>
            <returns>Out,RetValパラメタのバリュー</returns>
            <remarks>
            通常、Ｄａｏ経由で利用する。
            動的SQLの場合はSQL実行後に利用可能
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.SetParameter(System.String,System.Object)">
            <summary>パラメタライズドクエリにパラメタを設定する。</summary>
            <param name="parameterName">パラメタライズドクエリのパラメタ名</param>
            <param name="obj">パラメタの値</param>
            <remarks>通常、Ｄａｏ経由で利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.SetParameter(System.String,System.Object,System.Object)">
            <summary>パラメタライズドクエリにパラメタを設定する。</summary>
            <param name="parameterName">パラメタライズドクエリのパラメタ名</param>
            <param name="obj">パラメタの値</param>
            <param name="dbTypeInfo">パラメタの型（SqlDbType）（設定しない場合は、nullを指定）</param>
            <remarks>通常、Ｄａｏ経由で利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.SetParameter(System.String,System.Object,System.Object,System.Int32)">
            <summary>パラメタライズドクエリにパラメタを設定する。</summary>
            <param name="parameterName">パラメタライズドクエリのパラメタ名</param>
            <param name="obj">パラメタの値</param>
            <param name="dbTypeInfo">パラメタの型（SqlDbType）（設定しない場合は、nullを指定）</param>
            <param name="size">パラメタのサイズ（設定しない場合は、-1を指定）</param>
            <remarks>通常、Ｄａｏ経由で利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.SetParameter(System.String,System.Object,System.Object,System.Int32,System.Data.ParameterDirection)">
            <summary>パラメタライズドクエリにパラメタを設定する。</summary>
            <param name="parameterName">パラメタライズドクエリのパラメタ名</param>
            <param name="obj">パラメタの値</param>
            <param name="dbTypeInfo">パラメタの型（SqlDbType）（設定しない場合は、nullを指定）</param>
            <param name="size">パラメタのサイズ（設定しない場合は、-1を指定）</param>
            <param name="paramDirection">パラメタの方向</param>
            <remarks>通常、Ｄａｏ経由で利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.SetUserParameter(System.String,System.String)">
            <summary>ユーザパラメタを指定の文字列で置換する。</summary>
            <param name="userParameterName">置換対象のユーザパラメタ名</param>
            <param name="userParameterValue">置換の文字列</param>
            <remarks>
            SQLインジェクションされる可能性があるユーザ入力は「userParameterValue」に指定しないこと。
            通常、Ｄａｏ経由で利用する。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.PreExecQuery">
            <summary>
            SQL実行前の、
            ・通常のパラメタライズド クエリ
            ・動的パラメタライズド クエリ
            制御用メソッド
            </summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.ExecSelectFill_DT(System.Data.DataTable)">
            <summary>Selectクエリを実行し、データテーブルを返す。</summary>
            <param name="dt">データテーブル</param>
            <remarks>
            SqlDataAdapterのFillを実行する。
            通常、Ｄａｏ経由で利用する。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.ExecSelectFill_DS(System.Data.DataSet)">
            <summary>Selectクエリを実行し、データセットを返す。</summary>
            <param name="ds">データセット</param>
            <remarks>
            SqlDataAdapterのFillを実行する。
            通常、Ｄａｏ経由で利用する。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.ExecSelect_DR">
            <summary>Selectクエリを実行し、データリーダを返す。</summary>
            <returns>SqlDataReader</returns>
            <remarks>
            SqlCommandのExecuteReaderを実行する。
            通常、Ｄａｏ経由で利用する。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.ExecSelectScalar">
            <summary>Selectクエリを実行し、結果セットの最初の行の最初の列を返す。</summary>
            <returns>結果セットの最初の行の最初の列（オブジェクト型） </returns>
            <remarks>
            SqlCommandのExecuteScalarを実行する。
            通常、Ｄａｏ経由で利用する。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.ExecInsUpDel_NonQuery">
            <summary>Insert、Update、Deleteクエリを実行し、影響を受けた行数を返す。</summary>
            <returns>影響を受けた行数</returns>
            <remarks>
            SqlCommandのExecuteNonQueryを実行する。
            通常、Ｄａｏ経由で利用する。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.ExecGenerateSQL(Touryo.Infrastructure.Public.Db.SQLUtility)">
            <summary>静的SQLを生成する</summary>
            <param name="sqlUtil">SQLUtility</param>
            <returns>SQL文</returns>
            <remarks>
            Commandでの実行はしない。
            通常、Ｄａｏ経由で利用する。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.GetCurrentQuery">
            <summary>現在コマンドオブジェクトに設定されているSQLを取得する。</summary>
            <returns>現在コマンドオブジェクトに設定されているSQL</returns>
            <remarks>必要に応じて利用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.DamSqlSvr.GetCurrentQueryForLog">
            <summary>現在コマンドオブジェクトに設定されているSQLを取得する（ログ出力用に編集したもの）。</summary>
            <returns>現在コマンドオブジェクトに設定されているSQL（ログ出力用に編集したもの）</returns>
            <remarks>必要に応じて利用する。</remarks>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Db.DbEnum">
            <summary>Public.Db名前空間で使用する列挙型クラス</summary>
            <remarks>特定の箇所で利用できる。</remarks>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Db.DbEnum.DBMSType">
            <summary>DBMS指定の列挙型</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.DBMSType.SQLServer">
            <summary>SQLServer</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.DBMSType.Oracle">
            <summary>Oracle</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.DBMSType.DB2">
            <summary>DB2</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.DBMSType.HiRDB">
            <summary>HiRDB</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.DBMSType.MySQL">
            <summary>MySQL</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.DBMSType.PstGrS">
            <summary>PostgreSQL</summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Db.DbEnum.DataProviderType">
            <summary>DataProvider指定の列挙型</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.DataProviderType.SQLClient">
            <summary>SQLServer SQLClient</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.DataProviderType.ODBC">
            <summary>ODBC</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.DataProviderType.OLEDB">
            <summary>OLEDB</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.DataProviderType.OraODP">
            <summary>Oracle ODP.NET</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.DataProviderType.DB2">
            <summary>DB2.NET</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.DataProviderType.HiRDB">
            <summary>HiRDB.NET</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.DataProviderType.MySQLCN">
            <summary>MySQL Connector/NET</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.DataProviderType.Npgsql">
            <summary>PostgreSQL Npgsql</summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Db.DbEnum.IsolationLevelEnum">
            <summary>分離レベル指定のための列挙型</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.IsolationLevelEnum.NotConnect">
            <summary>
            NotConnect（コネクションしない）
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.IsolationLevelEnum.NoTransaction">
            <summary>
            NoTransaction（トランザクションを開始しない）
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.IsolationLevelEnum.DefaultTransaction">
            <summary>
            DefaultTransaction（規定の分離レベルでトランザクションを開始）
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.IsolationLevelEnum.ReadUncommitted">
            <summary>
            ReadUncommitted（非コミット読み取りの分離レベルでトランザクションを開始）
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.IsolationLevelEnum.ReadCommitted">
            <summary>
            ReadCommitted（コミット済み読み取りの分離レベルでトランザクションを開始）
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.IsolationLevelEnum.RepeatableRead">
            <summary>
            RepeatableRead（反復可能読み取りの分離レベルでトランザクションを開始）
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.IsolationLevelEnum.Serializable">
            <summary>
            Serializable（直列化可能の分離レベルでトランザクションを開始）
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.IsolationLevelEnum.Snapshot">
            <summary>
            Snapshot（スナップショット分離レベルでトランザクションを開始）
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.IsolationLevelEnum.User">
            <summary>
            ユーザが、独自のロジックを使用して指定する
            </summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Db.DbEnum.QueryStatusEnum">
            <summary>設定されているクエリーの状態を示す列挙型</summary>
            <remarks>DPQuery_Toolから利用するので、public</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.QueryStatusEnum.IsNotSet">
            <summary>設定されていない状態</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.QueryStatusEnum.SPQ">
            <summary>SPQ（静的パラメタライズド・クエリ）</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.DbEnum.QueryStatusEnum.DPQ">
            <summary>DPQ（動的パラメタライズド・クエリ）</summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Db.SQLUtility">
            <summary>SQL生成ユーティリティ</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Db.SQLUtility.OpeningBracket">
            <summary>囲い文字（開始）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Db.SQLUtility.ClosingBracket">
            <summary>囲い文字（終了）</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.SQLUtility._dbms">
            <summary>DBMSの種類</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.SQLUtility._convertString">
            <summary>文字列のコンバート先の型</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Db.SQLUtility._dateTimeFormatString">
            <summary>日付型のFormatString</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.SQLUtility.#ctor(Touryo.Infrastructure.Public.Db.DbEnum.DBMSType)">
            <summary>コンストラクタ</summary>
            <param name="dbms">DBMSの種類</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.SQLUtility.#ctor(Touryo.Infrastructure.Public.Db.DbEnum.DBMSType,System.String)">
            <summary>コンストラクタ</summary>
            <param name="dbms">DBMSの種類</param>
            <param name="convertString">文字列変換方法（空の場合は既定値を使用）</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.SQLUtility.#ctor(Touryo.Infrastructure.Public.Db.DbEnum.DBMSType,System.String,System.String)">
            <summary>コンストラクタ</summary>
            <param name="dbms">DBMSの種類</param>
            <param name="convertString">文字列変換方法（空の場合は既定値を使用）</param>
            <param name="dateTimeFormatString">日付を文字列化する際に使用するFormatString</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.SQLUtility.GetInsertSQLParts(System.Data.DataTable)">
            <summary>Insert系SQLのパーツを生成</summary>
            <param name="dt">入力DataTable</param>
            <returns>Insert系SQLのパーツ文字列配列</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.SQLUtility.GetUpdateSQLParts(System.Data.DataTable,System.String[])">
            <summary>Update系SQLのパーツを生成</summary>
            <param name="dt">入力DataTable</param>
            <param name="primaryKeys">主キー情報</param>
            <returns>Update系SQLのパーツ文字列配列</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Db.SQLUtility.ConvertParameterToSQL(System.Object)">
            <summary>パラメタをSQLに変換する。</summary>
            <param name="obj">パラメタ</param>
            <returns>SQL化したパラメタ</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Dto.DataRowState">
            <summary>
            行ステータスを表す列挙型
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DataRowState.Detached">
            <summary>
            行が、どの行リストにも属さない状態
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DataRowState.Added">
            <summary>
            行リストに行が追加された状態
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DataRowState.Modified">
            <summary>
            行の値が変更された状態
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DataRowState.Deleted">
            <summary>
            行が削除された状態
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DataRowState.Unchanged">
            <summary>
            行の値が確定している状態
            </summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Dto.DTColumn">
            <summary>列クラス</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTColumn._colName">
            <summary>列名</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTColumn._colType">
            <summary>列型</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTColumn.ColName">
            <summary>列名</summary>
            <remarks>確認専用（変更されないように）</remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTColumn.ColType">
            <summary>列型</summary>
            <remarks>確認専用（変更されないように）</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTColumn.#ctor(System.String,Touryo.Infrastructure.Public.Dto.DTType)">
            <summary>コンストラクタ</summary>
            <param name="colName">列名</param>
            <param name="colType">列型</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTColumn.CheckType(System.Object,Touryo.Infrastructure.Public.Dto.DTType)">
            <summary>タイプをチェックする</summary>
            <param name="o">指定の値</param>
            <param name="dtType">指定の型</param>
            <returns>true・false</returns>
            <remarks>値をセルに設定するときに使用する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTColumn.AutoCast(Touryo.Infrastructure.Public.Dto.DTType,System.Object)">
            <summary>キャストする</summary>
            <param name="dtType">指定の型</param>
            <param name="o">指定の値</param>
            <returns>変換後の値</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTColumn.EnumToString(Touryo.Infrastructure.Public.Dto.DTType)">
            <summary>列挙型を電文上の文字列に変換する</summary>
            <param name="dtType">列挙型</param>
            <returns>電文上の文字列</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTColumn.StringToEnum(System.String)">
            <summary>電文上の文字列を列挙型に変換する</summary>        
            <param name="strType">電文上の文字列</param>
            <returns>列挙型</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Dto.DTColumns">
            <summary>列コレクション</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTColumns._cols">
            <summary>列を保持するList</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTColumns._colNameIndexMap">
            <summary>列名 ⇒ 列インデックスのマップを保持するDictionary</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTColumns._tblStat">
            <summary>表情報の共有</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTColumns.#ctor(Touryo.Infrastructure.Public.Dto.DTTableStatus)">
            <summary>コンストラクタ</summary>
            <param name="tblStat">表情報</param>
            <remarks>外部からは生成できないようにする</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTColumns.Add(Touryo.Infrastructure.Public.Dto.DTColumn)">
            <summary>列の追加</summary>
            <param name="dtCol">列</param>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTColumns.Item(System.String)">
            <summary>列を取得する（確認用）</summary>
            <param name="colName">列名</param>
            <returns>列</returns>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTColumns.Item(System.Int32)">
            <summary>列を取得する（確認用）</summary>
            <param name="index">インデックス</param>
            <returns>列</returns>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTColumns.Count">
            <summary>列数の取得</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTColumns.ColsInfo">
            <summary>列を保持するList</summary>
            <remarks>変更させないため、外部に公開しない。</remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTColumns.ColNameIndexMap">
            <summary>列名 ⇒ 列インデックスのマップを保持するDictionary</summary>
            <remarks>変更させないため、外部に公開しない。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTColumns.GetEnumerator">
            <summary>列挙子を取得</summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Dto.DTRow">
            <summary>行クラス</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTRow._cols">
            <summary>列コレクション</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTRow._row">
            <summary>行のデータ本体</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTRow._rowState">
            <summary>行ステータス</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTRow.#ctor(Touryo.Infrastructure.Public.Dto.DTColumns)">
            <summary>
            コンストラクタでは列を必要とする。
            </summary>
            <param name="cols">列コレクション</param>
            <remarks>外部からは生成できないようにする</remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTRow.Item(System.String)">
            <summary>セルにアクセスするためのインデクサ</summary>
            <param name="colName">列名</param>
            <returns>セルの値</returns>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTRow.Item(System.Int32)">
            <summary>セルにアクセスするためのインデクサ</summary>
            <param name="index">インデックス</param>
            <returns>セルの値</returns>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTRow.ColsInfo">
            <summary>列情報の取得</summary>
            <remarks>変更させないため、外部に公開しない。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTRow.GetEnumerator">
            <summary>列挙子を取得</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTRow.RowState">
            <summary>行ステータス</summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Dto.DTRows">
            <summary>行コレクション</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTRows._rows">
            <summary>行を保持するList</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTRows._tblStat">
            <summary>表情報の共有</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTRows._cols">
            <summary>列コレクション</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTRows.#ctor(Touryo.Infrastructure.Public.Dto.DTTableStatus,Touryo.Infrastructure.Public.Dto.DTColumns)">
            <summary>コンストラクタ</summary>
            <param name="tblStat">表情報</param>
            <param name="cols">列コレクション</param>
            <remarks>外部からは生成できないようにする</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTRows.AddNew">
            <summary>行の生成と追加</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTRows.Add(Touryo.Infrastructure.Public.Dto.DTRow)">
            <summary>行の追加</summary>
            <param name="dr">行</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTRows.Delete(System.Int32)">
            <summary>行の削除</summary>
            <param name="index">インデックス</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTRows.DeleteFromList(System.Int32)">
            <summary>
            物理的にリストからアイテムを削除する
            </summary>
            <param name="index">削除する行のインデックス</param>
            <remarks>DTTable.AcceptChanges からのみ呼ばれるメソッド</remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTRows.Item(System.Int32)">
            <summary>行を取得する</summary>
            <param name="index">インデックス</param>
            <returns>行</returns>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTRows.Count">
            <summary>列数の取得</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTRows.GetEnumerator">
            <summary>列挙子を取得</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTRows.Find(Touryo.Infrastructure.Public.Dto.DataRowState)">
            <summary>
            指定したステータスの行を検索する
            </summary>
            <param name="rowState">行ステータス</param>
            <returns>指定したステータスの行</returns>
            <remarks>行ステータスは論理和演算で複数条件の指定が可能</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTRows.ToDataSource">
            <summary>
            DataGridなどへの表示用に、削除された(ステータス=Deleted)行を除く行リストを取得する
            </summary>
            <returns>削除された行を除く行リスト</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Dto.DTTable">
            <summary>表クラス</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTTable._tblStat">
            <summary>表情報の共有</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTTable._tblName">
            <summary>表名</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTTable._cols">
            <summary>列コレクション</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTTable._rows">
            <summary>行コレクション</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTTable.TableName">
            <summary>表名</summary>
            <remarks>確認専用（変更されないように）</remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTTable.Cols">
            <summary>列コレクション</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTTable.Rows">
            <summary>行コレクション</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTTable.#ctor(System.String)">
            <summary>コンストラクタ</summary>
            <param name="tblName">表名</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTTable.ToDataTable">
            <summary>
            DTTableをSystem.Data.DataTableに変換する
            </summary>
            <returns>変換後のSystem.Data.DataTable</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTTable.FromDataTable(System.Data.DataTable)">
            <summary>
            System.Data.DataTableをDTTableに変換する
            </summary>
            <param name="table">変換元のSystem.Data.DataTable</param>
            <returns>変換後のDTTable</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTTable.ConvertDTTypeToType(Touryo.Infrastructure.Public.Dto.DTType)">
            <summary>
            DTTypeの値を、対応するType型の値に変換する
            </summary>
            <param name="dtType">DTTypeの値</param>
            <returns>変換後のType型の値</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTTable.ConvertTypeToDTType(System.Type)">
            <summary>
            Type型の値を、対応するDTType型の値に変換する
            </summary>
            <param name="type">Type型の値</param>
            <returns>変換後のDTType型の値</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTTable.GetChanges">
            <summary>
            修正された(Added, Modified, Deleted)行を取得する
            </summary>
            <returns></returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTTable.AcceptChanges">
            <summary>
            行の変更を確定させる
            </summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTTable.SavejqGridJson(System.Data.DataTable,System.Int32,System.String,System.String)">
            <summary>
            SavejqGridJson method for converting datatable data to JQGrid data by passing total count,rows of current page.
            </summary>
            <param name="data">DataTable data</param>
            <param name="totalCount">Total count</param>
            <param name="page">current page number</param>
            <param name="rows">Rows count</param>
            <returns>returns JQGrid data</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Dto.DTTable.JQGridDataClass">
            <summary>
            jqGrid に渡すデータを格納するクラス
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTTable.JQGridDataClass.page">
            <summary>
            クエリの現在のページ
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTTable.JQGridDataClass.total">
            <summary>
            クエリの総ページ数
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTTable.JQGridDataClass.rows">
            <summary>
            実際のデータを含むリスト
            </summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Dto.DTTable.JQGridDataRowClass">
            <summary>
            jqGrid に表示する、1 行分のデータを格納するクラス
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTTable.JQGridDataRowClass.id">
            <summary>
            列の固有 ID
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTTable.JQGridDataRowClass.cell">
            <summary>
            列のデータを含むリスト
            </summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Dto.DTTables">
            <summary>表コレクション</summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Dto.DTTables.TableRecords">
            <summary>
            Added the class to save the records in Json Format
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTTables.TableRecords.tbl">
            <summary>tbl</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTTables.TableRecords.col">
            <summary>col</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTTables.TableRecords.row">
            <summary>row</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTTables._tbls">
            <summary>表を保持するList</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTTables._tblsNameIndexMap">
            <summary>表名 ⇒ 表インデックスのマップを保持するDictionary</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTTables.Add(Touryo.Infrastructure.Public.Dto.DTTable)">
            <summary>表の追加</summary>
            <param name="dtTbl">表</param>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTTables.Item(System.String)">
            <summary>表を取得する</summary>
            <param name="tblName">表名</param>
            <returns>表</returns>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTTables.Item(System.Int32)">
            <summary>表を取得する</summary>
            <param name="index">インデックス</param>
            <returns>表</returns>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Dto.DTTables.Count">
            <summary>表数の取得</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTTables.GetEnumerator">
            <summary>列挙子を取得</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTTables.SaveJson">
            <summary>
            SaveJson Method(To save records in Json Format)
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTTables.Save(System.IO.TextWriter)">
            <summary>テキストとしてセーブする</summary>
            <param name="tw">任意のTextWriter </param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTTables.LoadJson(System.IO.StreamReader)">
            <summary>
            LoadJson Method(To Load records from Json format)
            </summary>
            <param name="sr">StreamReader</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTTables.Load(System.IO.TextReader)">
            <summary>テキストからロードする</summary>
            <param name="tr">任意のTextReader </param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTTables.DTTablesToString(Touryo.Infrastructure.Public.Dto.DTTables)">
            <summary>
            汎用DTOのマーシャル処理
            </summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Dto.DTTables.StringToDTTables(System.String)">
            <summary>
            汎用DTOのアンマーシャル処理
            </summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Dto.DTTableStatus">
            <summary>表情報の共有クラス</summary>
            <remarks>外部からは使用できないようにする</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTTableStatus.RowsCount">
            <summary>行数</summary>
            <remarks>外部からは使用できないようにする</remarks>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Dto.DTType">
            <summary>型情報-列挙型</summary>
            <remarks>
            以下のデータ型をサポートする。
            
            DataColumn      .NET型          Java型          WSDL型
            Boolean      ⇔ Boolean      ⇔ boolean      ⇔ boolean
            Byte         ⇔ byte配列     ⇔ byte配列     ⇔ base64Binary
            Char         ⇔ Char         ⇔ char         ⇔ char
            DateTime     ⇔ DateTime     ⇔ Date         ⇔ dateTime
            Decimal      ⇔ Decimal      ⇔ BigDecimal   ⇔ decimal
            Double       ⇔ Double       ⇔ double       ⇔ double
            Int16        ⇔ Int16        ⇔ short        ⇔ short
            Int32        ⇔ Int32        ⇔ int          ⇔ int
            Int64        ⇔ Int64        ⇔ long         ⇔ long
            SByte        ⇔ （サポートしない）
            Single       ⇔ Single       ⇔ float        ⇔ float
            String       ⇔ String       ⇔ String       ⇔ string
            TimeSpan     ⇔ （サポートしない）
            UInt16       ⇔ UInt16       ⇔ （サポートしない）
            UInt32       ⇔ UInt32       ⇔ （サポートしない）
            UInt64       ⇔ UInt64       ⇔ （サポートしない）
            
            ※ 通信時は全てText（String）だが、byte配列は
               Base64エンコーディングを使用するので注意。
            </remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTType.Boolean">
            <summary>Boolean型</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTType.ByteArray">
            <summary>バイト配列</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTType.Char">
            <summary>Char型</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTType.DateTime">
            <summary>DateTime型</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTType.Decimal">
            <summary>Decimal型</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTType.Double">
            <summary>Double型</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTType.Int16">
            <summary>Int16（Short）型</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTType.Int32">
            <summary>Int32（Integer）型</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTType.Int64">
            <summary>Int64（Long）型</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTType.Single">
            <summary>Single（Float）型</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Dto.DTType.String">
            <summary>String型</summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.IO.BinarySerialize">
            <summary>バイナリシリアライズクラス</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.IO.BinarySerialize.ObjectToBytes(System.Object)">
            <summary>指定したオブジェクトをバイナリシリアライズし、byte配列に変換する。</summary>
            <param name="obj">シリアライズするオブジェクト</param>
            <returns>オブジェクトをバイナリシリアライズしたbyte配列</returns>
            <remarks>
            自由に利用できる。
            ※ 引数オブジェクトのSerialize対応が前提
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.IO.BinarySerialize.BytesToObject(System.Byte[])">
            <summary>バイナリシリアライズしたbyte配列から、オブジェクトを復元する。</summary>
            <param name="abytObject">オブジェクトをバイナリシリアライズしたbyte配列</param>
            <returns>byte配列から復元したオブジェクト</returns>
            <remarks>
            自由に利用できる。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.IO.BinarySerialize.DeepClone(System.Object)">
            <summary>
            オブジェクトをディープコピーする。
            http://csharp.yaminabe.info/2006/08/post_1.html
            </summary>
            <param name="sourceObject">コピー元オブジェクト</param>
            <returns>コピー先オブジェクト</returns>
            <remarks>
            自由に利用できる。
            ※ 引数オブジェクトのSerialize対応が前提
            </remarks>
        </member>
        <member name="T:Touryo.Infrastructure.Public.IO.EmbeddedResourceLoader">
            <summary>[埋め込まれたリソース ファイル]の読み込みクラス</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.IO.EmbeddedResourceLoader.GetEntryAssembly(System.String)">
            <summary>[埋め込まれたリソース ファイル]を含むアセンブリを取得する</summary>
            <param name="assemblyString">
            アセンブリ名
            http://msdn.microsoft.com/ja-jp/library/k8xx4k69.aspx
            </param>
            <returns>Assembly</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.IO.EmbeddedResourceLoader.Exists(System.String,System.Boolean)">
            <summary>存在チェックのみのメソッド</summary>
            <param name="loadfileName">[埋め込まれたリソース ファイル]の名前（名前空間付き）</param>
            <param name="throwException">存在しない場合例外をスローするかどうかを指定</param>
            <returns>存在する：true、存在しない：false</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.IO.EmbeddedResourceLoader.Exists(System.String,System.String,System.Boolean)">
            <summary>存在チェックのみのメソッド</summary>
            <param name="assemblyString">
            アセンブリ名
            http://msdn.microsoft.com/ja-jp/library/k8xx4k69.aspx
            </param>
            <param name="loadfileName">[埋め込まれたリソース ファイル]の名前（名前空間付き）</param>
            <param name="throwException">存在しない場合例外をスローするかどうかを指定</param>
            <returns>存在する：true、存在しない：false</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.IO.EmbeddedResourceLoader.LoadAsString(System.String,System.Text.Encoding)">
            <summary>[埋め込まれたリソース ファイル]から文字列を読み込む。</summary>
            <param name="loadfileName">[埋め込まれたリソース ファイル]の名前（名前空間付き）</param>
            <param name="enc">エンコード</param>
            <returns>[埋め込まれたリソース ファイル]から読み込んだ文字列</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.IO.EmbeddedResourceLoader.LoadAsString(System.String,System.String,System.Text.Encoding)">
            <summary>[埋め込まれたリソース ファイル]から文字列を読み込む。</summary>
            <param name="assemblyString">
            アセンブリ名
            http://msdn.microsoft.com/ja-jp/library/k8xx4k69.aspx
            </param>
            <param name="loadfileName">[埋め込まれたリソース ファイル]の名前（名前空間付き）</param>
            <param name="enc">エンコード</param>
            <returns>[埋め込まれたリソース ファイル]から読み込んだ文字列</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.IO.EmbeddedResourceLoader.LoadXMLAsString(System.String)">
            <summary>[埋め込まれたリソースXMLファイル]から文字列を読み込む。</summary>
            <param name="loadfileName">[埋め込まれたリソースXMLファイル]の名前（名前空間付き）</param>
            <returns>[埋め込まれたリソースXMLファイル]から読み込んだ文字列</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.IO.EmbeddedResourceLoader.LoadXMLAsString(System.String,System.String)">
            <summary>[埋め込まれたリソースXMLファイル]から文字列を読み込む。</summary>
            <param name="assemblyString">
            アセンブリ名
            http://msdn.microsoft.com/ja-jp/library/k8xx4k69.aspx
            </param>
            <param name="loadfileName">[埋め込まれたリソースXMLファイル]の名前（名前空間付き）</param>
            <returns>[埋め込まれたリソースXMLファイル]から読み込んだ文字列</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="T:Touryo.Infrastructure.Public.IO.ResourceLoader">
            <summary>リソース読み込みクラス</summary>
            <remarks>利用箇所：利用箇所を問わない</remarks>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.IO.ResourceLoader.Exists(System.String,System.Boolean)">
            <summary>存在チェックのみのメソッド</summary>
            <param name="loadfilepath">[リソース ファイル]へのフルパス</param>
            <param name="throwException">存在しない場合例外をスローするかどうかを指定</param>
            <returns>存在する：true、存在しない：false</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.IO.ResourceLoader.Exists(System.String,System.String,System.Boolean)">
            <summary>存在チェックのみのメソッド</summary>
            <param name="filePath">[リソース ファイル]格納フォルダのパス</param>
            <param name="fileName">[リソース ファイル]名</param>
            <param name="throwException">存在しない場合例外をスローするかどうかを指定</param>
            <returns>存在する：true、存在しない：false</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.IO.ResourceLoader.LoadAsString(System.String,System.Text.Encoding)">
            <summary>[リソース ファイル]から文字列を読み込む。</summary>
            <param name="loadfilepath">[リソース ファイル]へのフルパス</param>
            <param name="enc">エンコード</param>
            <returns>[リソース ファイル]から読み込んだ文字列</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.IO.ResourceLoader.LoadAsString(System.String,System.String,System.Text.Encoding)">
            <summary>[リソース ファイル]から文字列を読み込む。</summary>
            <param name="filePath">[リソース ファイル]格納フォルダのパス</param>
            <param name="fileName">[リソース ファイル]名</param>
            <param name="enc">エンコード</param>
            <returns>[リソース ファイル]から読み込んだ文字列</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Log.LogIF">
            <summary>log4netログ出力を行うクラス</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Log.LogIF.DebugLog(System.String,System.String)">
            <summary>log4netのDEBUGログを出力する。</summary>
            <param name="loggerName">ロガー名</param>
            <param name="message">メッセージ内容</param>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Log.LogIF.InfoLog(System.String,System.String)">
            <summary>log4netのINFORMATIONログを出力する。</summary>
            <param name="loggerName">ロガー名</param>
            <param name="message">メッセージ内容</param>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Log.LogIF.WarnLog(System.String,System.String)">
            <summary>log4netのWARNINGログを出力する。</summary>
            <param name="loggerName">ロガー名</param>
            <param name="message">メッセージ内容</param>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Log.LogIF.ErrorLog(System.String,System.String)">
            <summary>log4netのERRORログを出力する。</summary>
            <param name="loggerName">ロガー名</param>
            <param name="message">メッセージ内容</param>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Log.LogIF.FatalLog(System.String,System.String)">
            <summary>log4netのFATALログを出力する。</summary>
            <param name="loggerName">ロガー名</param>
            <param name="message">メッセージ内容</param>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Log.LogIF.GetLoggerLogLevel(System.String)">
            <summary>ロガーのログ レベルを取得</summary>
            <param name="loggerName">ロガー名</param>
            <returns>ロガーのログ レベル（DisplayName）</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Log.LogIF.GetRootLoggerLogLevel(System.String)">
            <summary>ルート ロガーのログ レベルを取得</summary>
            <param name="loggerName">ロガー名</param>
            <returns>ルート ロガーのログ レベル（DisplayName）</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Log.LogIF.IsDebugEnabled(System.String)">
            <summary>ロガーのIsDebugEnabledを取得</summary>
            <param name="loggerName">ロガー名</param>
            <returns>IsDebugEnabled</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Log.LogIF.IsInfoEnabled(System.String)">
            <summary>ロガーのIsInfoEnabledを取得</summary>
            <param name="loggerName">ロガー名</param>
            <returns>IsInfoEnabled</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Log.LogIF.IsWarnEnabled(System.String)">
            <summary>ロガーのIsWarnEnabledを取得</summary>
            <param name="loggerName">ロガー名</param>
            <returns>IsWarnEnabled</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Log.LogIF.IsErrorEnabled(System.String)">
            <summary>ロガーのIsErrorEnabledを取得</summary>
            <param name="loggerName">ロガー名</param>
            <returns>IsErrorEnabled</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Log.LogIF.IsFatalEnabled(System.String)">
            <summary>ロガーのIsFatalEnabledを取得</summary>
            <param name="loggerName">ロガー名</param>
            <returns>IsFatalEnabled</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Log.LogManager">
            <summary>ロガー管理クラス</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Log.LogManager._logIfHt">
            <summary>
            SQL（log4net.ILog）をキャッシュする
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Log.LogManager._lock">
            <summary>
            排他のためのクラス変数
            </summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Log.LogManager.GetLog4netIf(System.String)">
            <summary>
            log4net.ILogインスタンスの取得
            </summary>
            <param name="loggerName">ロガー名</param>
            <returns>log4netのインターフェイス</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource">
            <summary>
              ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.ResourceManager">
            <summary>
              このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.Culture">
            <summary>
              厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
              現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.ARGUMENT_INJUSTICE">
            <summary>
              Argument injustice. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.COMMANDTIMEOUT_ERROR">
            <summary>
              Please specify one or more numerical values (second) as a CommandTimeout value.Config key: に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.DB_ISO_LEVEL_PARAM_ERROR_NC">
            <summary>
              The invalid parameter [NotConnect] was specified as DbEnum.IsolationLevelEnum iso. [NotConnect] parameter cannot be used. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.DB_ISO_LEVEL_PARAM_ERROR_RR">
            <summary>
              The invalid isolation level [RepeatableRead] was specified as DbEnum.IsolationLevelEnum iso in {0} databases. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.DB_ISO_LEVEL_PARAM_ERROR_SS">
            <summary>
              The invalid isolation level [Snapshot] was specified as DbEnum.IsolationLevelEnum iso in {0} databases. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.DB_ISO_LEVEL_PARAM_ERROR_UC">
            <summary>
              The invalid isolation level [ReadUncommitted] was specified as DbEnum.IsolationLevelEnum iso in {0} databases. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.DB_ISO_LEVEL_PARAM_ERROR_USR">
            <summary>
              The invalid parameter [User] was specified as DbEnum.IsolationLevelEnum iso. A user needs to change [User] parameter to other isolation levels. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.DPQ_ELSE_TAG_DOESNT_EXIST_WHEN_INNER_PARAM_OF_IF_TAG_IS_FALSE">
            <summary>
              The ELSE tag is not set up although false was set to the parameter in a tag of IF tag. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.DPQ_ELSE_TAG_DOESNT_EXIST_WHEN_INNER_PARAM_OF_IF_TAG_IS_NULL">
            <summary>
              The ELSE tag is not set up although null was set to the parameter in a tag of IF tag. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.DPQ_ELSE_TAG_DOESNT_EXIST_WHEN_TEXT_PARAM_OF_IF_TAG_IS_NULL">
            <summary>
              The ELSE tag is not set up although null was set to the parameter in a text of IF tag. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.DPQ_SET_ONLY_NULL_OR_BOOL_TO_INNER_PARAM_VALUE">
            <summary>
              The value which can be set as the parameter in a tag of {0} tag is only a null value or Boolean value. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.DPQ_TAG_FORMAT_ERROR">
            <summary>
              The format of {0} tag is inaccurate. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.DPQ_TAG_INNER_PARAM_NOT_EXIST">
            <summary>
              The parameter in a tag is not set to {0} tag. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.DPQ_TAG_NAME_ATTR_NOT_EXIST">
            <summary>
              The name attribute is not set to {0} tag (null). に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.DPQ_TAG_NAME_ATTR_VALUE_IS_EMPTY">
            <summary>
              The name attribute is not set to {0} tag (null character sequence). に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.DPQ_TAG_VALUE_ATTR_NOT_EXIST">
            <summary>
              The value attribute is not set to {0} tag (null). に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.LATEBIND_ERROR0">
            <summary>
              assembly name: [{0}] does not exist. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.LATEBIND_ERROR1">
            <summary>
              Class name: [{1}] does not exist in assembly name: [{0}]. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.LATEBIND_ERROR2">
            <summary>
              Method name: [{2}] does not exist in assembly name: [{0}] and class name: [{1}]. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.LATEBIND_ERROR3">
            <summary>
              Method name: [{2}] whose number of arguments corresponds does not exist in assembly name: [{0}] and class name: [{1}]. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.NO_CONFIG">
            <summary>
              Config does not have specification. Config key:{0} に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.NOT_IMPLEMENTED">
            <summary>
              This processing is not implemented. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.NOT_SUPPORTED">
            <summary>
              This process is not supported. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.ORDER_BIND_ERROR_PARAMETER_NOT_FOUND">
            <summary>
              Must declare the scalar variable &quot;{0}&quot;. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.PARAM_IS_NULL">
            <summary>
              {0} parameter is null. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.PARAM_TAG_ERROR">
            <summary>
              Conversion of parameter information ({0}) went wrong. :{1} に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.PARAM_TAG_TYPE_ERROR">
            <summary>
              Type specification is inaccurate ({0}). に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.PARAM_TAG_VALUE_ERROR">
            <summary>
              Value specification is inaccurate ({0}). に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.PROP_STRING_FORMAT_ERROR">
            <summary>
              Property character string format is inaccurate. :{0} に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.PROP_STRING_FORMAT_ERROR_CURLY_BRACE">
            <summary>
              Curly brace is not closed correctly. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.PROP_STRING_FORMAT_ERROR_DELIMITER_OF_PROPERTY_NAME">
            <summary>
              The delimiter of property name is inaccurate. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.PROP_STRING_FORMAT_ERROR_DELIMITER_OF_PROPERTY_VALUE">
            <summary>
              The delimiter of property value is inaccurate. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.PROP_STRING_FORMAT_ERROR_ESCAPE_CHARACTER">
            <summary>
              Escape character is inaccurate ({0}). に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.PROP_STRING_FORMAT_ERROR_PROPERTY_NAME_IS_EMPTY">
            <summary>
              Property name is empty. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.PROP_STRING_FORMAT_ERROR_PROPERTY_VALUE_IS_EMPTY">
            <summary>
              Property value is empty. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.PROP_STRING_FORMAT_ERROR_START_CHARACTER">
            <summary>
              Start character is inaccurate(=, ;, }). に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.RESOURCE_FILE_NOT_FOUND">
            <summary>
              resource file [{0}] was not found. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.SWITCH_ERROR">
            <summary>
              Please specify a switch by &quot;on&quot; or &quot;off&quot;. Config key:{0} に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.THIS_DPQ_TAG_IS_UNKNOWN">
            <summary>
              The inaccurate tag is contained. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.XML_DECLARATION_ERROR">
            <summary>
              XML declaration [{0}] is inaccurate. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.XML_ELEMENT_ERROR">
            <summary>
              XML element is inaccurate. {0} に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.XML_ELEMENT_ERROR_LOG4NET">
            <summary>
              There is not log4net of a route element. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Resources.PublicExceptionMessageResource.ZIP_PASSWORD">
            <summary>
              A setup of a password is required when enciphering. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.UnSymmetricCryptography">
            <summary>下位互換のため</summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.ASymmetricCryptography">
            <summary>非対称アルゴリズムによる暗号化・復号化クラス</summary>
            <remarks>
            自由に利用できる。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.ASymmetricCryptography.EncryptString(System.String,System.String)">
            <summary>文字列を暗号化する</summary>
            <param name="sourceString">暗号化する文字列</param>
            <param name="publicKey">暗号化に使用する公開鍵</param>
            <returns>非対称アルゴリズムで暗号化された文字列</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.ASymmetricCryptography.EncryptBytes(System.Byte[],System.String)">
            <summary>バイト配列を暗号化する</summary>
            <param name="source">暗号化するバイト配列</param>
            <param name="publicKey">暗号化に使用する公開鍵</param>
            <returns>非対称アルゴリズムで暗号化されたバイト配列</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.ASymmetricCryptography.DecryptString(System.String,System.String)">
            <summary>暗号化された文字列を復号化する</summary>
            <param name="sourceString">暗号化された文字列</param>
            <param name="privateKey">復号化に使用する秘密鍵</param>
            <returns>非対称アルゴリズムで復号化された文字列</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.ASymmetricCryptography.DecryptBytes(System.Byte[],System.String)">
            <summary>暗号化されたバイト配列を復号化する</summary>
            <param name="source">暗号化されたバイト配列</param>
            <param name="privateKey">復号化に使用する秘密鍵</param>
            <returns>非対称アルゴリズムで復号化されたバイト配列</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.ASymmetricCryptography.GetKeys(System.String@,System.String@)">
            <summary>秘密鍵と公開鍵を取得する。</summary>
            <param name="publicKey">公開鍵</param>
            <param name="privateKey">秘密鍵</param>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.EnumDigitalSignAlgorithm">
            <summary>
            アルゴリズムのサービスプロバイダの種類
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumDigitalSignAlgorithm.RSACryptoServiceProvider_MD5">
            <summary>RSACryptoServiceProvider:MD5</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumDigitalSignAlgorithm.RSACryptoServiceProvider_SHA1">
            <summary>RSACryptoServiceProvider:SHA1</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumDigitalSignAlgorithm.RSACryptoServiceProvider_SHA256">
            <summary>RSACryptoServiceProvider:SHA256</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumDigitalSignAlgorithm.RSACryptoServiceProvider_SHA384">
            <summary>RSACryptoServiceProvider:SHA384</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumDigitalSignAlgorithm.RSACryptoServiceProvider_SHA512">
            <summary>RSACryptoServiceProvider:SHA512</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumDigitalSignAlgorithm.DSACryptoServiceProvider_SHA1">
            <summary>DSACryptoServiceProvider:SHA1</summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.DigitalSign">
            <summary>
            DigitalSignクラス抽象クラス
            </summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSign.Sign(System.Byte[])">
            <summary>Sign</summary>
            <param name="data">data</param>
            <returns>署名</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSign.Verify(System.Byte[],System.Byte[])">
            <summary>Verify</summary>
            <param name="data">data</param>
            <param name="sign">署名</param>
            <returns>検証結果</returns>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.DigitalSign.IsDisposed">
            <summary>IsDisposed</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSign.Finalize">
            <summary>finalizer</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSign.Close">
            <summary>Close</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSign.Dispose">
            <summary>Dispose</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSign.MyDispose(System.Boolean)">
            <summary>MyDispose (派生の末端を呼ぶ)</summary>
            <param name="disposing">disposing</param>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.DigitalSignParam">
            <summary>
            DigitalSignXMLクラス
            - RSACryptoServiceProvider:
              MD5, SHA1, SHA256, SHA384, SHA512
            - DSACryptoServiceProvider:SHA1
            だけ、サポート。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.DigitalSignParam.AsymmetricAlgorithm">
            <summary>AsymmetricAlgorithm</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.DigitalSignParam.HashAlgorithm">
            <summary>HashAlgorithm</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSignParam.#ctor(Touryo.Infrastructure.Public.Security.EnumDigitalSignAlgorithm)">
            <summary>Constructor</summary>
            <param name="eaa">EnumDigitalSignAlgorithm</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSignParam.#ctor(System.Object,System.Security.Cryptography.HashAlgorithm)">
            <summary>Constructor</summary>
            <param name="param">object</param>
            <param name="ha">HashAlgorithm</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSignParam.Sign(System.Byte[])">
            <summary>デジタル署名を作成する</summary>
            <param name="data">デジタル署名を行なう対象データ</param>
            <returns>対象データに対してデジタル署名したデジタル署名部分のデータ</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSignParam.Verify(System.Byte[],System.Byte[])">
            <summary>デジタル署名を検証する</summary>
            <param name="data">デジタル署名を行なった対象データ</param>
            <param name="sign">対象データに対してデジタル署名したデジタル署名部分のデータ</param>
            <returns>検証結果( true:検証成功, false:検証失敗 )</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSignParam.MyDispose(System.Boolean)">
            <summary>MyDispose (派生の末端を呼ぶ)</summary>
            <param name="isDisposing">isDisposing</param>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.DigitalSignX509">
            <summary>
            DigitalSignX509クラス
            - RSACryptoServiceProvider:
              MD5, SHA1, SHA256, SHA384, SHA512
            - DSACryptoServiceProvider:SHA1
            だけ、サポート。
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.DigitalSignX509._hashAlgorithmName">
            <summary>
            RSAの場合、以下からHashAlgorithm名を指定する。
            MD5, SHA1, SHA256, SHA384, SHA512
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.DigitalSignX509.X509Certificate">
            <summary>X.509証明書</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.DigitalSignX509.X509PrivateKey">
            <summary>X.509証明書の秘密鍵</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.DigitalSignX509.X509PublicKey">
            <summary>X.509証明書の公開鍵</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSignX509.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor
            X.509証明書(*.pfx, *.cer)からキーを設定する。
            *.cer証明書の場合は、証明書チェーンが繋がっている必要がある。
            自己証明書の場合「信頼されたルート証明機関」にInstallするなどする。
            </summary>
            <param name="certificateFilePath">X.509証明書(*.pfx, *.cer)へのパス</param>
            <param name="password">パスワード</param>
            <param name="hashAlgorithmName">
            RSAの場合、以下からHashAlgorithm名を指定する。
            MD5, SHA1, SHA256, SHA384, SHA512
            </param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSignX509.#ctor(System.String,System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
            <summary>
            Constructor
            X.509証明書(*.pfx, *.cer)からキーを設定する。
            *.cer証明書の場合は、証明書チェーンが繋がっている必要がある。
            自己証明書の場合「信頼されたルート証明機関」にInstallするなどする。
            </summary>
            <param name="certificateFilePath">X.509証明書(*.pfx, *.cer)へのパス</param>
            <param name="password">パスワード</param>
            <param name="hashAlgorithmName">
            RSAの場合、以下からHashAlgorithm名を指定する。
            MD5, SHA1, SHA256, SHA384, SHA512
            </param>
            <param name="flag">X509KeyStorageFlags</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSignX509.Sign(System.Byte[])">
            <summary>デジタル署名を作成する</summary>
            <param name="data">デジタル署名を行なう対象データ</param>
            <returns>対象データに対してデジタル署名したデジタル署名部分のデータ</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSignX509.Verify(System.Byte[],System.Byte[])">
            <summary>デジタル署名を検証する</summary>
            <param name="data">デジタル署名を行なった対象データ</param>
            <param name="sign">対象データに対してデジタル署名したデジタル署名部分のデータ</param>
            <returns>検証結果( true:検証成功, false:検証失敗 )</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.DigitalSignXML">
            <summary>
            DigitalSignXMLクラス
            - RSACryptoServiceProvider:
              MD5, SHA1, SHA256, SHA384, SHA512
            - DSACryptoServiceProvider:SHA1
            だけ、サポート。
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.DigitalSignXML.AsymmetricAlgorithm">
            <summary>AsymmetricAlgorithm</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.DigitalSignXML.HashAlgorithm">
            <summary>HashAlgorithm</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.DigitalSignXML.XMLPrivateKey">
            <summary>
            XMLPrivateKey
            RFC 3275のXML秘密鍵
            </summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.DigitalSignXML.XMLPublicKey">
            <summary>
            XMLPublicKey
            RFC 3275のXML公開鍵
            </summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSignXML.#ctor(Touryo.Infrastructure.Public.Security.EnumDigitalSignAlgorithm)">
            <summary>Constructor</summary>
            <param name="eaa">EnumDigitalSignAlgorithm</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSignXML.#ctor(Touryo.Infrastructure.Public.Security.EnumDigitalSignAlgorithm,System.String)">
            <summary>Constructor</summary>
            <param name="eaa">EnumDigitalSignAlgorithm</param>
            <param name="xmlKey">string</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSignXML.Sign(System.Byte[])">
            <summary>デジタル署名を作成する</summary>
            <param name="data">デジタル署名を行なう対象データ</param>
            <returns>対象データに対してデジタル署名したデジタル署名部分のデータ</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSignXML.Verify(System.Byte[],System.Byte[])">
            <summary>デジタル署名を検証する</summary>
            <param name="data">デジタル署名を行なった対象データ</param>
            <param name="sign">対象データに対してデジタル署名したデジタル署名部分のデータ</param>
            <returns>検証結果( true:検証成功, false:検証失敗 )</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.DigitalSignXML.MyDispose(System.Boolean)">
            <summary>MyDispose (派生の末端を呼ぶ)</summary>
            <param name="isDisposing">isDisposing</param>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.EnumHashAlgorithm">
            <summary>
            ハッシュアルゴリズムのサービスプロバイダの種類
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumHashAlgorithm.Default">
            <summary>Default</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumHashAlgorithm.MD5CryptoServiceProvider">
            <summary>MD5CryptoServiceProvider</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumHashAlgorithm.SHA1CryptoServiceProvider">
            <summary>SHA1CryptoServiceProvider</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumHashAlgorithm.SHA1Managed">
            <summary>SHA1Managed</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumHashAlgorithm.SHA256Managed">
            <summary>SHA256Managed</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumHashAlgorithm.SHA384Managed">
            <summary>SHA384Managed</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumHashAlgorithm.SHA512Managed">
            <summary>SHA512Managed</summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.GetHash">
            <summary>ハッシュを取得するクラス</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetHash.GetSaltedPassword(System.String,Touryo.Infrastructure.Public.Security.EnumHashAlgorithm,System.Int32)">
            <summary>
            Password entered by the userをDB保存する際、
            Salted and hashed passwordとして保存する必要がある。
            </summary>
            <param name="rawPassword">>Password entered by the user.</param>
            <param name="eha">ハッシュ・アルゴリズム列挙型</param>
            <param name="saltLength">ソルトの文字列長</param>
            <returns>Salted and hashed password.</returns>
            <see ref="http://www.atmarkit.co.jp/ait/articles/1110/06/news154_2.html"/>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetHash.GetSaltedPassword(System.String,Touryo.Infrastructure.Public.Security.EnumHashAlgorithm,System.Int32,System.Int32)">
            <summary>
            Password entered by the userをDB保存する際、
            Salted and hashed passwordとして保存する必要がある。
            </summary>
            <param name="rawPassword">>Password entered by the user.</param>
            <param name="eha">ハッシュ・アルゴリズム列挙型</param>
            <param name="saltLength">ソルトの文字列長</param>
            <param name="stretchCount">ストレッチ回数</param>
            <returns>Salted and hashed password.</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetHash.EqualSaltedPassword(System.String,System.String,Touryo.Infrastructure.Public.Security.EnumHashAlgorithm)">
            <summary>パスワードを比較して認証する。</summary>
            <param name="rawPassword">Password entered by the user.</param>
            <param name="saltedPassword">Salted and hashed password.</param>
            <param name="eha">ハッシュ・アルゴリズム列挙型</param>
            <returns>
            true：パスワードは一致した。
            false：パスワードは一致しない。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetHash.GetHashString(System.String,Touryo.Infrastructure.Public.Security.EnumHashAlgorithm)">
            <summary>文字列のハッシュ値を計算して返す。</summary>
            <param name="sourceString">文字列</param>
            <param name="eha">ハッシュ・アルゴリズム列挙型</param>
            <returns>ハッシュ値（文字列）</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetHash.GetHashString(System.String,Touryo.Infrastructure.Public.Security.EnumHashAlgorithm,System.Int32)">
            <summary>文字列のハッシュ値を計算して返す。</summary>
            <param name="sourceString">文字列</param>
            <param name="eha">ハッシュ・アルゴリズム列挙型</param>
            <param name="stretchCount">ストレッチ回数</param>
            <returns>ハッシュ値（文字列）</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetHash.GetHashBytes(System.Byte[],Touryo.Infrastructure.Public.Security.EnumHashAlgorithm)">
            <summary>バイト配列のハッシュ値を計算して返す。</summary>
            <param name="asb">バイト配列</param>
            <param name="eha">ハッシュ・アルゴリズム列挙型</param>
            <returns>ハッシュ値（バイト配列）</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetHash.GetHashBytes(System.Byte[],Touryo.Infrastructure.Public.Security.EnumHashAlgorithm,System.Int32)">
            <summary>バイト配列のハッシュ値を計算して返す。</summary>
            <param name="asb">バイト配列</param>
            <param name="eha">ハッシュ・アルゴリズム列挙型</param>
            <param name="stretchCount">ストレッチ回数</param>
            <returns>ハッシュ値（バイト配列）</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetHash.CreateHashAlgorithmServiceProvider(Touryo.Infrastructure.Public.Security.EnumHashAlgorithm)">
            <summary>ハッシュ（キー無し）サービスプロバイダの生成</summary>
            <param name="eha">ハッシュ（キー無し）サービスプロバイダの列挙型</param>
            <returns>ハッシュ（キー無し）サービスプロバイダ</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.EnumKeyedHashAlgorithm">
            <summary>
            ハッシュ（キー付き）アルゴリズムのサービスプロバイダの種類
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumKeyedHashAlgorithm.Default">
            <summary>Default</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumKeyedHashAlgorithm.HMACSHA1">
            <summary>HMACSHA1</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumKeyedHashAlgorithm.HMACMD5">
            <summary>HMACMD5</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumKeyedHashAlgorithm.HMACSHA256">
            <summary>HMACSHA256</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumKeyedHashAlgorithm.HMACSHA384">
            <summary>HMACSHA384</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumKeyedHashAlgorithm.HMACSHA512">
            <summary>HMACSHA512</summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.GetKeyedHash">
            <summary>ハッシュ（キー付き）を取得するクラス</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.GetKeyedHash._salt">
            <summary>ソルト</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.GetKeyedHash.Salt">
            <summary>ソルト</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.GetKeyedHash._stretchCount">
            <summary>ストレッチ回数</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.GetKeyedHash.StretchCount">
            <summary>ストレッチ回数</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetKeyedHash.GetSaltedPassword(System.String,Touryo.Infrastructure.Public.Security.EnumKeyedHashAlgorithm,System.String,System.Int32)">
            <summary>
            Password entered by the userをDB保存する際、
            Salted and hashed passwordとして保存する必要がある。
            </summary>
            <param name="rawPassword">Password entered by the user.</param>
            <param name="ekha">ハッシュ・アルゴリズム列挙型</param>
            <param name="key">キー（システム共通）</param>
            <param name="saltLength">ソルトの文字列長</param>
            <returns>Salted and hashed password.</returns>
            <see ref="http://www.atmarkit.co.jp/ait/articles/1110/06/news154_2.html"/>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetKeyedHash.GetSaltedPassword(System.String,Touryo.Infrastructure.Public.Security.EnumKeyedHashAlgorithm,System.String,System.Int32,System.Int32)">
            <summary>
            Password entered by the userをDB保存する際、
            Salted and hashed passwordとして保存する必要がある。
            </summary>
            <param name="rawPassword">Password entered by the user.</param>
            <param name="ekha">ハッシュ・アルゴリズム列挙型</param>
            <param name="key">キー</param>
            <param name="saltLength">ソルトの文字列長</param>
            <param name="stretchCount">ストレッチ回数</param>
            <returns>Salted and hashed password.</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetKeyedHash.EqualSaltedPassword(System.String,System.String,Touryo.Infrastructure.Public.Security.EnumKeyedHashAlgorithm)">
            <summary>パスワードを比較して認証する。</summary>
            <param name="rawPassword">Password entered by the user.</param>
            <param name="saltedPassword">Salted and hashed password.</param>
            <param name="ekha">ハッシュ・アルゴリズム列挙型</param>
            <returns>
            true：パスワードは一致した。
            false：パスワードは一致しない。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetKeyedHash.GetKeyedHashString(System.String,Touryo.Infrastructure.Public.Security.EnumKeyedHashAlgorithm,System.String)">
            <summary>文字列のハッシュ値を計算して返す。</summary>
            <param name="ss">文字列</param>
            <param name="ekha">ハッシュ（キー付き）アルゴリズム列挙型</param>
            <param name="password">使用するパスワード</param>
            <returns>ハッシュ値（文字列）</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetKeyedHash.GetKeyedHashString(System.String,Touryo.Infrastructure.Public.Security.EnumKeyedHashAlgorithm,System.String,System.Byte[])">
            <summary>文字列のハッシュ値を計算して返す。</summary>
            <param name="ss">文字列</param>
            <param name="ekha">ハッシュ（キー付き）アルゴリズム列挙型</param>
            <param name="password">使用するパスワード</param>
            <param name="salt">ソルト</param>
            <returns>ハッシュ値（文字列）</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetKeyedHash.GetKeyedHashString(System.String,Touryo.Infrastructure.Public.Security.EnumKeyedHashAlgorithm,System.String,System.Byte[],System.Int32)">
            <summary>文字列のハッシュ値を計算して返す。</summary>
            <param name="ss">文字列</param>
            <param name="ekha">ハッシュ（キー付き）アルゴリズム列挙型</param>
            <param name="password">使用するパスワード</param>
            <param name="salt">ソルト</param>
            <param name="stretching">ストレッチ回数</param>
            <returns>ハッシュ値（文字列）</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetKeyedHash.GetKeyedHashBytes(System.Byte[],Touryo.Infrastructure.Public.Security.EnumKeyedHashAlgorithm,System.String)">
            <summary>バイト配列のハッシュ値を計算して返す。</summary>
            <param name="asb">バイト配列</param>
            <param name="ekha">ハッシュ（キー付き）アルゴリズム列挙型</param>
            <param name="password">使用するパスワード</param>
            <returns>ハッシュ値（バイト配列）</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetKeyedHash.GetKeyedHashBytes(System.Byte[],Touryo.Infrastructure.Public.Security.EnumKeyedHashAlgorithm,System.String,System.Byte[])">
            <summary>バイト配列のハッシュ値を計算して返す。</summary>
            <param name="asb">バイト配列</param>
            <param name="ekha">ハッシュ（キー付き）アルゴリズム列挙型</param>
            <param name="password">使用するパスワード</param>
            <param name="salt">ソルト</param>
            <returns>ハッシュ値（バイト配列）</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetKeyedHash.GetKeyedHashBytes(System.Byte[],Touryo.Infrastructure.Public.Security.EnumKeyedHashAlgorithm,System.String,System.Byte[],System.Int32)">
            <summary>バイト配列のハッシュ値を計算して返す。</summary>
            <param name="asb">バイト配列</param>
            <param name="ekha">ハッシュ（キー付き）アルゴリズム列挙型</param>
            <param name="password">使用するパスワード</param>
            <param name="salt">ソルト</param>
            <param name="stretchCount">ストレッチ回数</param>
            <returns>ハッシュ値（バイト配列）</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetKeyedHash.CreateKeyedHashAlgorithmServiceProvider(Touryo.Infrastructure.Public.Security.EnumKeyedHashAlgorithm,System.Byte[])">
            <summary>ハッシュ（キー付き）サービスプロバイダの生成</summary>
            <param name="ekha">ハッシュ（キー付き）サービスプロバイダの列挙型</param>
            <param name="key">キー</param>
            <returns>ハッシュ（キー付き）サービスプロバイダ</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.GetPassword">
            <summary>GetPassword</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetPassword.Base64Secret(System.Int32)">
            <summary>Base64Secretを生成</summary>
            <param name="byteSize">サイズ（バイト）</param>
            <returns>Base64Secret</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetPassword.Base64UrlSecret(System.Int32)">
            <summary>Base64UrlSecretを生成</summary>
            <param name="byteSize">サイズ（バイト）</param>
            <returns>Base64UrlSecret</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetPassword.RandomByte(System.Int32)">
            <summary>RandomByte</summary>
            <param name="byteSize">Byteサイズ</param>
            <returns>RandomByte</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.GetPassword.Generate(System.Int32,System.Int32)">
            <summary>PasswordをGenerate</summary>
            <param name="length">長さ（1-127）</param>
            <param name="numberOfNonAlphanumericCharacters">Alphanumeric以外の文字数(0-length)</param>
            <returns>Password</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.Header">
            <summary>JWT(JWS) Header</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.Header.alg">
            <summary>
            alg=HS256 or RS256
            JWTのデジタル署名アルゴリズムを指定する。
            HS256 or RS256の署名アルゴリズムのみサポート。
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.Header.typ">
            <summary>
            typ=JWT
            アサーションのタイプを指定。JWT固定。
            </summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.JWT">
            <summary>JWT(JWS)</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT.Create(System.String)">
            <summary>JWT生成メソッド</summary>
            <param name="payloadJson">ペイロード部のJson文字列</param>
            <returns>JWTの文字列表現</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT.Verify(System.String)">
            <summary>JWT検証メソッド</summary>
            <param name="jwtString">JWTの文字列表現</param>
            <returns>署名の検証結果</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.JWT_HS256">
            <summary>JWT_HS256</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.JWT_HS256.Key">
            <summary>キー</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.JWT_HS256.JWK">
            <summary>検証用JWK</summary>
            <remarks>https://mkjwk.org</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT_HS256.#ctor(System.Byte[])">
            <summary>Constructor</summary>
            <param name="key">byte[]</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT_HS256.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="jwkString">string</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT_HS256.Create(System.String)">
            <summary>HS256のJWT生成メソッド</summary>
            <param name="payloadJson">ペイロード部のJson文字列</param>
            <returns>JWTの文字列表現</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT_HS256.Verify(System.String)">
            <summary>RS256のJWT検証メソッド</summary>
            <param name="jwtString">JWTの文字列表現</param>
            <returns>署名の検証結果</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.JWT_RS256">
            <summary>JWT(JWS)RS256生成クラス（X.509証明書による）</summary>
            <remarks>後方互換維持のため</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT_RS256.#ctor(System.String,System.String)">
            <summary>Constructor</summary>
            <param name="certificateFilePath">DigitalSignX509に渡すcertificateFilePathパラメタ</param>
            <param name="password">DigitalSignX509に渡すpasswordパラメタ</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT_RS256.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
            <summary>Constructor</summary>
            <param name="certificateFilePath">DigitalSignX509に渡すcertificateFilePathパラメタ</param>
            <param name="password">DigitalSignX509に渡すpasswordパラメタ</param>
            <param name="flag">X509KeyStorageFlags</param>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.JWT_RS256_Param">
            <summary>ParamによるJWT(JWS)RS256生成クラス</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.JWT_RS256_Param.DigitalSignParam">
            <summary>DigitalSignParam</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.JWT_RS256_Param.RsaPrivateParameters">
            <summary>秘密鍵のRSAParameters</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.JWT_RS256_Param.RsaPublicParameters">
            <summary>公開鍵のRSAParameters</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT_RS256_Param.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT_RS256_Param.#ctor(System.Object)">
            <summary>Constructor</summary>
            <param name="param">object</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT_RS256_Param.Create(System.String)">
            <summary>RS256のJWT生成メソッド</summary>
            <param name="payloadJson">ペイロード部のJson文字列</param>
            <returns>JWTの文字列表現</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT_RS256_Param.Verify(System.String)">
            <summary>RS256のJWT検証メソッド</summary>
            <param name="jwtString">JWTの文字列表現</param>
            <returns>署名の検証結果</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.JWT_RS256_X509">
            <summary>X.509証明書によるJWT(JWS)RS256生成クラス</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.JWT_RS256_X509.DigitalSignX509">
            <summary>DigitalSignX509</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT_RS256_X509.#ctor(System.String,System.String)">
            <summary>Constructor</summary>
            <param name="certificateFilePath">DigitalSignX509に渡すcertificateFilePathパラメタ</param>
            <param name="password">DigitalSignX509に渡すpasswordパラメタ</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT_RS256_X509.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
            <summary>Constructor</summary>
            <param name="certificateFilePath">DigitalSignX509に渡すcertificateFilePathパラメタ</param>
            <param name="password">DigitalSignX509に渡すpasswordパラメタ</param>
            <param name="flag">X509KeyStorageFlags</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT_RS256_X509.Create(System.String)">
            <summary>RS256のJWT生成メソッド</summary>
            <param name="payloadJson">ペイロード部のJson文字列</param>
            <returns>JWTの文字列表現</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT_RS256_X509.Verify(System.String)">
            <summary>RS256のJWT検証メソッド</summary>
            <param name="jwtString">JWTの文字列表現</param>
            <returns>署名の検証結果</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.JWT_RS256_XML">
            <summary>XMLによるJWT(JWS)RS256生成クラス</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.JWT_RS256_XML.XMLPublicKey">
            <summary>公開鍵</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Security.JWT_RS256_XML.XMLPrivateKey">
            <summary>秘密鍵</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.JWT_RS256_XML._DigitalSignXML">
            <summary>DigitalSignXML</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT_RS256_XML.#ctor">
            <summary>Constructor</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT_RS256_XML.#ctor(System.String)">
            <summary>Constructor</summary>
            <param name="xmlKey">string</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT_RS256_XML.Create(System.String)">
            <summary>RS256のJWT生成メソッド</summary>
            <param name="payloadJson">ペイロード部のJson文字列</param>
            <returns>JWTの文字列表現</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.JWT_RS256_XML.Verify(System.String)">
            <summary>RS256のJWT検証メソッド</summary>
            <param name="jwtString">JWTの文字列表現</param>
            <returns>署名の検証結果</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.RS256_KeyConverter">
            <summary>
            RSA関係のカギ変換処理を実装する。
            X.509 or XML ⇔ RSAParameters ⇔ JWK
            </summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.RS256_KeyConverter.XmlToProvider(System.String)">
            <summary>
            XmlToProvider
            XML鍵からRsaProviderへ変換
            </summary>
            <param name="xmlKey">XML鍵</param>
            <returns>RSACryptoServiceProvider</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.RS256_KeyConverter.JwkToProvider(System.String)">
            <summary>
            JwkToProvider
            Jwk公開鍵からRSAProviderへ変換
            </summary>
            <param name="jwkPublicKey">jwkPublicKey</param>
            <returns>
            RSACryptoServiceProvider
              rsaCryptoServiceProvider.VerifyData(
                data, signatureBytes,
                HashAlgorithmName.SHA256, RSASignaturePadding.Pkcs1);
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.RS256_KeyConverter.X509CerToProvider(System.String)">
            <summary>
            X509CerToProvider
            X.509公開鍵(*.cer)からRsaProviderへ変換
            </summary>
            <param name="certificateFilePath"></param>
            <returns>RSACryptoServiceProvider</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.RS256_KeyConverter.ParamToXmlPublicKey(System.Security.Cryptography.RSAParameters)">
            <summary>
            ParamToXmlPublicKey
            RSAParametersからXml公開鍵へ変換
            </summary>
            <param name="param">RSAParameters</param>
            <returns>XmlPublicKey</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.RS256_KeyConverter.ParamToJwkPublicKey(System.Security.Cryptography.RSAParameters)">
            <summary>
            ParamToJwkPublicKey
            RSAParametersからJwk公開鍵へ変換
            </summary>
            <param name="param">RSAParameters</param>
            <returns>JwkPublicKey</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.RsaAndDsaCmnFunc">
            <summary>
            RsaAndDsaCmnFuncクラス
            - RSACryptoServiceProvider:
              MD5, SHA1, SHA256, SHA384, SHA512
            - DSACryptoServiceProvider:SHA1
            だけ、サポート。
            </summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.RsaAndDsaCmnFunc.CreateAsymmetricAlgorithmFromParam(System.Object,System.Security.Cryptography.HashAlgorithm)">
            <summary>公開鍵・暗号化サービスプロバイダの生成(param)</summary>
            <param name="param">
            - RSAParameters
            - DSAParameters
            </param>
            <param name="ha">HashAlgorithm(使用可能かチェック)</param>
            <returns>
            AsymmetricAlgorithm
            - RSACryptoServiceProvider
            - DSACryptoServiceProvider
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.RsaAndDsaCmnFunc.CreateDigitalSignServiceProvider(Touryo.Infrastructure.Public.Security.EnumDigitalSignAlgorithm,System.Security.Cryptography.AsymmetricAlgorithm@,System.Security.Cryptography.HashAlgorithm@)">
            <summary>署名・検証サービスプロバイダの生成(EnumDigitalSignAlgorithm)</summary>
            <param name="eaa">EnumDigitalSignAlgorithm</param>
            <param name="aa">
            AsymmetricAlgorithm
            - RSACryptoServiceProvider
            - DSACryptoServiceProvider
            </param>
            <param name="ha">
            HashAlgorithm
            </param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.RsaAndDsaCmnFunc.GetHashAlgorithmName(System.Security.Cryptography.HashAlgorithm)">
            <summary>GetHashAlgorithmName</summary>
            <param name="ha">HashAlgorithm</param>
            <returns>HashAlgorithmName</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm">
            <summary>
            対称アルゴリズムによる
            暗号化サービスプロバイダの種類
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm.AesManaged">
            <summary>AesManaged</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm.DESCryptoServiceProvider">
            <summary>DESCryptoServiceProvider</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm.RC2CryptoServiceProvider">
            <summary>RC2CryptoServiceProvider</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm.RijndaelManaged">
            <summary>RijndaelManaged</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm.TripleDESCryptoServiceProvider">
            <summary>TripleDESCryptoServiceProvider</summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Security.SymmetricCryptography">
            <summary>対称アルゴリズムによる暗号化・復号化クラス</summary>
            <remarks>
            自由に利用できる。
            http://dobon.net/vb/dotnet/string/encryptstring.html
            </remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.SymmetricCryptography.Salt">
            <summary>固定ソルト</summary>
            <remarks>以前のVerからデフォルト値を修正しているので、</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Security.SymmetricCryptography.Stretching">
            <summary>固定ストレッチング</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.SymmetricCryptography.EncryptString(System.String,System.String,Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm)">
            <summary>文字列を暗号化する</summary>
            <param name="sourceString">暗号化する文字列</param>
            <param name="password">暗号化に使用するパスワード</param>
            <param name="esa">
            対称アルゴリズムによる
            暗号化サービスプロバイダの種類
            </param>
            <returns>
            対称アルゴリズムで
            暗号化された文字列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.SymmetricCryptography.EncryptString(System.String,System.String,Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm,System.Byte[])">
            <summary>文字列を暗号化する</summary>
            <param name="sourceString">暗号化する文字列</param>
            <param name="password">暗号化に使用するパスワード</param>
            <param name="esa">
            対称アルゴリズムによる
            暗号化サービスプロバイダの種類
            </param>
            <param name="salt">ソルト</param>
            <returns>
            対称アルゴリズムで
            暗号化された文字列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.SymmetricCryptography.EncryptString(System.String,System.String,Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm,System.Byte[],System.Int32)">
            <summary>文字列を暗号化する</summary>
            <param name="sourceString">暗号化する文字列</param>
            <param name="password">暗号化に使用するパスワード</param>
            <param name="esa">
            対称アルゴリズムによる
            暗号化サービスプロバイダの種類
            </param>
            <param name="salt">ソルト</param>
            <param name="stretching">ストレッチング</param>
            <returns>
            対称アルゴリズムで
            暗号化された文字列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.SymmetricCryptography.EncryptBytes(System.Byte[],System.String,Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm)">
            <summary>バイト配列を暗号化する</summary>
            <param name="source">暗号化するバイト配列</param>
            <param name="password">暗号化に使用するパスワード</param>
            <param name="esa">
            対称アルゴリズムによる
            暗号化サービスプロバイダの種類
            </param>
            <returns>
            対称アルゴリズムで
            暗号化されたバイト配列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.SymmetricCryptography.EncryptBytes(System.Byte[],System.String,Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm,System.Byte[])">
            <summary>バイト配列を暗号化する</summary>
            <param name="source">暗号化するバイト配列</param>
            <param name="password">暗号化に使用するパスワード</param>
            <param name="esa">
            対称アルゴリズムによる
            暗号化サービスプロバイダの種類
            </param>
            <param name="salt">ソルト</param>
            <returns>
            対称アルゴリズムで
            暗号化されたバイト配列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.SymmetricCryptography.EncryptBytes(System.Byte[],System.String,Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm,System.Byte[],System.Int32)">
            <summary>バイト配列を暗号化する</summary>
            <param name="source">暗号化するバイト配列</param>
            <param name="password">暗号化に使用するパスワード</param>
            <param name="esa">
            対称アルゴリズムによる
            暗号化サービスプロバイダの種類
            </param>
            <param name="salt">ソルト</param>
            <param name="stretching">ストレッチング</param>
            <returns>
            対称アルゴリズムで
            暗号化されたバイト配列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.SymmetricCryptography.DecryptString(System.String,System.String,Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm)">
            <summary>暗号化された文字列を復号化する</summary>
            <param name="sourceString">暗号化された文字列</param>
            <param name="password">暗号化に使用したパスワード</param>
            <param name="esa">
            対称アルゴリズムによる
            暗号化サービスプロバイダの種類
            </param>
            <returns>
            対称アルゴリズムで
            復号化された文字列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.SymmetricCryptography.DecryptString(System.String,System.String,Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm,System.Byte[])">
            <summary>暗号化された文字列を復号化する</summary>
            <param name="sourceString">暗号化された文字列</param>
            <param name="password">暗号化に使用したパスワード</param>
            <param name="esa">
            対称アルゴリズムによる
            暗号化サービスプロバイダの種類
            </param>
            <param name="salt">ソルト</param>
            <returns>
            対称アルゴリズムで
            復号化された文字列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.SymmetricCryptography.DecryptString(System.String,System.String,Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm,System.Byte[],System.Int32)">
            <summary>暗号化された文字列を復号化する</summary>
            <param name="sourceString">暗号化された文字列</param>
            <param name="password">暗号化に使用したパスワード</param>
            <param name="esa">
            対称アルゴリズムによる
            暗号化サービスプロバイダの種類
            </param>
            <param name="salt">ソルト</param>
            <param name="stretching">ストレッチング</param>
            <returns>
            対称アルゴリズムで
            復号化された文字列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.SymmetricCryptography.DecryptBytes(System.Byte[],System.String,Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm)">
            <summary>暗号化されたバイト配列を復号化する</summary>
            <param name="source">暗号化されたバイト配列</param>
            <param name="password">暗号化に使用したパスワード</param>
            <param name="esa">
            対称アルゴリズムによる
            暗号化サービスプロバイダの種類
            </param>
            <returns>
            対称アルゴリズムで
            復号化されたバイト配列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.SymmetricCryptography.DecryptBytes(System.Byte[],System.String,Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm,System.Byte[])">
            <summary>暗号化されたバイト配列を復号化する</summary>
            <param name="source">暗号化されたバイト配列</param>
            <param name="password">暗号化に使用したパスワード</param>
            <param name="esa">
            対称アルゴリズムによる
            暗号化サービスプロバイダの種類
            </param>
            <param name="salt">ソルト</param>
            <returns>
            対称アルゴリズムで
            復号化されたバイト配列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.SymmetricCryptography.DecryptBytes(System.Byte[],System.String,Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm,System.Byte[],System.Int32)">
            <summary>暗号化されたバイト配列を復号化する</summary>
            <param name="source">暗号化されたバイト配列</param>
            <param name="password">暗号化に使用したパスワード</param>
            <param name="esa">
            対称アルゴリズムによる
            暗号化サービスプロバイダの種類
            </param>
            <param name="salt">ソルト</param>
            <param name="stretching">ストレッチング</param>
            <returns>
            対称アルゴリズムで
            復号化されたバイト配列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.SymmetricCryptography.GenerateKeyFromPassword(System.String,System.Int32,System.Byte[]@,System.Int32,System.Byte[]@,System.Byte[],System.Int32)">
            <summary>パスワードから共有キーと初期化ベクタを生成する</summary>
            <param name="password">基になるパスワード</param>
            <param name="keySize">共有キーのサイズ（ビット）</param>
            <param name="key">作成された共有キー</param>
            <param name="blockSize">初期化ベクタのサイズ（ビット）</param>
            <param name="iv">作成された初期化ベクタ</param>
            <param name="salt">ソルト</param>
            <param name="stretching">ストレッチング</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Security.SymmetricCryptography.CreateSymmetricAlgorithm(Touryo.Infrastructure.Public.Security.EnumSymmetricAlgorithm)">
            <summary>
            対称アルゴリズムによる
            暗号化サービスプロバイダを生成
            </summary>
            <param name="esa">
            対称アルゴリズムによる
            暗号化サービスプロバイダの種類
            </param>
            <returns>
            対称アルゴリズムによる
            暗号化サービスプロバイダ
            </returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Str.CheckCharCode">
            <summary>文字コード範囲チェック用クラス</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.CheckCharCode.StartChar">
            <summary>開始文字</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.CheckCharCode.EndChar">
            <summary>終了文字</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.CheckCharCode.StringEncoding">
            <summary>エンコーディング</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.CheckCharCode.StartCode">
            <summary>開始文字コードデータ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.CheckCharCode.EndCode">
            <summary>終了文字コードデータ</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.CheckCharCode.#ctor(System.String,System.String,System.Text.Encoding)">
            <summary>コンストラクタ</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.CheckCharCode.IsInRange(System.String)">
            <summary>
            文字コード範囲チェック
            </summary>
            <param name="ch">
            チェックする文字（１文字）
            </param>
            <returns>
            true：範囲内
            false：範囲外
            </returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Str.CustomEncode">
            <summary>エンコード処理のユーティリティクラス</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.CustomEncode.shift_jis">
            <summary>日本語 (シフト JIS)</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.CustomEncode.ISO_2022_JP">
            <summary>日本語 (JIS)</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.CustomEncode._iso_2022_jp_Dollar_ESC">
            <summary>日本語 (JIS-Allow 1 byte Kana)</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.CustomEncode._iso_2022_jp_Dollar_SIO">
            <summary>日本語 (JIS-Allow 1 byte Kana - SO/SI)</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.CustomEncode.UTF_16LE">
            <summary>Unicode  (UTF-16)</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.CustomEncode.UTF_16BE">
            <summary>Unicode (unicodeFFFE)</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.CustomEncode.UTF_7">
            <summary>Unicode (UTF-7)</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.CustomEncode.UTF_8">
            <summary>Unicode (UTF-8)</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.CustomEncode.x_mac_japanese">
            <summary>日本語 (Mac)</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.CustomEncode.us_ascii">
            <summary>US_ASCII</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.CustomEncode.EUC_JP">
            <summary>日本語 (EUC)</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.CustomEncode.GetEncodings">
            <summary>EncodingのDataTable返す。</summary>
            <returns>EncodingのDataTable</returns>
            <remarks>コンボにバインドするため</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.CustomEncode.StringToByte(System.String,System.Int32)">
            <summary>文字列をバイト配列に変換する（エンコード）</summary>
            <param name="str">文字列</param>
            <param name="codePageNum">エンコーディングに使用するコードページ（パブリック定数を使用して設定の事）</param>
            <returns>バイト配列</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.CustomEncode.ByteToString(System.Byte[],System.Int32)">
            <summary>バイト配列を文字列に変換する（デコード）</summary>
            <param name="abyt">バイト配列</param>
            <param name="codePageNum">エンコーディングに使用するコードページ（パブリック定数を使用して設定の事）</param>
            <returns>文字列</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.CustomEncode.HtmlEncode(System.String)">
            <summary>HTMLエンコードする。</summary>
            <param name="input">HTML出力する文字列</param>
            <returns>HTMLエンコードされた文字列</returns>
            <remarks>
            TextBoxはデフォルトでサニタイジングされているが、
            それ以外のWebコントロールには、必要に応じて、
            HTMLエンコードによるサニタイジング処理が必要になる。
            
            また、数値文字参照をHTMLエンコードすると、二重エンコード
            になるため、多くの場合、数値文字参照は、正しく処理できない。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.CustomEncode.HtmlDecode(System.String)">
            <summary>HTMLデコードする。</summary>
            <param name="input">HTMLエンコードされた文字列</param>
            <returns>HTMLデコードされた文字列</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.CustomEncode.UrlEncode(System.String)">
            <summary>Urlエンコードする。</summary>
            <param name="input">文字列</param>
            <returns>Urlエンコードされた文字列</returns>
            <remarks>
            URLエンコードとは
            http://ja.wikipedia.org/wiki/URLエンコード
            
            UrlEncodeの用途は、クエリ文字列の
            変数名・変数値の作成時などに限定する。
            （デコードはASP.NETが受信したHttpRequest.QueryStringでは自動のため不要。）
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.CustomEncode.UrlEncode2(System.String)">
            <summary>URLの基本的な構造を崩さずにURLエンコードする。</summary>
            <param name="input">Url文字列</param>
            <returns>UrlエンコードされたUrl文字列</returns>
            <remarks>
            URLエンコードとは
            http://ja.wikipedia.org/wiki/URLエンコード
            
            UrlEncode2の用途は、URLの基本的な構造を崩さずにURLエンコードする場合に限定する。
            Url文字列をURLエンコードしてRedirectUrl クエリ文字列を作成する場合などはUrlEncodeを使用。
            （デコードはASP.NETが受信したHttpRequest.QueryStringでは自動のため不要。）
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.CustomEncode.UrlDecode(System.String)">
            <summary>Urlデコードする。</summary>
            <param name="input">UrlエンコードされたUrl</param>
            <returns>UrlデコードされたUrl</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.CustomEncode.ToBase64String(System.Byte[])">
            <summary>バイト配列をBase64文字列に変換</summary>
            <param name="aryByt">Base64文字列に変更するバイト配列</param>
            <returns>Base64文字列</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.CustomEncode.FromBase64String(System.String)">
            <summary>Base64文字列をバイト配列に変換</summary>
            <param name="base64Str">バイト配列に変換するBase64文字列</param>
            <returns>バイト配列</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.CustomEncode.ToBase64UrlString(System.Byte[])">
            <summary>バイト配列をBase64Url文字列に変換</summary>
            <param name="aryByt">Base64Url文字列に変更するバイト配列</param>
            <returns>Base64Url文字列</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.CustomEncode.FromBase64UrlString(System.String)">
            <summary>Base64Url文字列をバイト配列に変換</summary>
            <param name="base64UrlStr">バイト配列に変換するBase64Url文字列</param>
            <returns>バイト配列</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.CustomEncode.ToHexString(System.Byte[])">
            <summary>バイト配列をHex文字列に変換</summary>
            <param name="bytes">Hex文字列に変換するバイト配列</param>
            <returns>Hex文字列</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.CustomEncode.FormHexString(System.String)">
            <summary>Hex文字列をバイト配列に変換</summary>
            <param name="input">バイト配列に変換するHex文字列</param>
            <returns>バイト配列</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Str.FormatChecker">
            <summary>正規表現を用いた汎用書式チェック処理クラス</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpZipCode(System.String)">
            <summary>指定された文字列が郵便（区）番号 形式であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：郵便（区）番号 形式である。
            false：郵便（区）番号 形式でない。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpZipCode_Hyphen(System.String)">
            <summary>
            指定された文字列が郵便（区）番号
            （日本, ハイフン有り）形式であるか。
            </summary>
            <param name="input">入力文字列</param>
            <returns>
            true：郵便（区）番号（日本, ハイフン有り）形式である。
            false：郵便（区）番号（日本, ハイフン有り）形式でない。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpZipCode_NoHyphen(System.String)">
            <summary>
            指定された文字列が郵便 番号
            （日本, ハイフン無し）形式であるか。
            </summary>
            <param name="input">入力文字列</param>
            <returns>
            true：郵便（区）番号（日本, ハイフン無し）形式である。
            false：郵便（区）番号（日本, ハイフン無し）形式でない。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpZipCode7(System.String)">
            <summary>
            指定された文字列が郵便 番号 形式であるか。
            </summary>
            <param name="input">入力文字列</param>
            <returns>
            true：郵便 番号 形式である。
            false：郵便 番号 形式でない。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpZipCode7_Hyphen(System.String)">
            <summary>
            指定された文字列が郵便 番号
            （日本, ハイフン有り）形式であるか。
            </summary>
            <param name="input">入力文字列</param>
            <returns>
            true：郵便 番号（日本, ハイフン有り）形式である。
            false：郵便 番号（日本, ハイフン有り）形式でない。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpZipCode7_NoHyphen(System.String)">
            <summary>
            指定された文字列が郵便 番号
            （日本, ハイフン無し）形式であるか。
            </summary>
            <param name="input">入力文字列</param>
            <returns>
            true：郵便 番号（日本, ハイフン無し）形式である。
            false：郵便 番号（日本, ハイフン無し）形式でない。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpZipCode5(System.String)">
            <summary>指定された文字列が郵便 区 番号 形式であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：郵便 区 番号 形式である。
            false：郵便 区 番号 形式でない。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpZipCode5_Hyphen(System.String)">
            <summary>
            指定された文字列が郵便 区 番号
            （日本, ハイフン有り）形式であるか。
            </summary>
            <param name="input">入力文字列</param>
            <returns>
            true：郵便 区 番号（日本, ハイフン有り）形式である。
            false：郵便 区 番号（日本, ハイフン有り）形式でない。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpZipCode5_NoHyphen(System.String)">
            <summary>
            指定された文字列が郵便 区 番号
            （日本, ハイフン無し）形式であるか。
            </summary>
            <param name="input">入力文字列</param>
            <returns>
            true：郵便 区 番号（日本, ハイフン無し）形式である。
            false：郵便 区 番号（日本, ハイフン無し）形式でない。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpTelephoneNumber(System.String)">
            <summary>指定された文字列が電話番号（日本）であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：電話番号（日本）形式である。
            false：電話番号（日本）形式でない。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpTelephoneNumber_Hyphen(System.String)">
            <summary>指定された文字列が電話番号（日本, ハイフン有り）であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：電話番号（日本, ハイフン有り）である。
            false：電話番号（日本, ハイフン有り）でない。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpTelephoneNumber_NoHyphen(System.String)">
            <summary>指定された文字列が電話番号（日本, ハイフン無し）であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：電話番号（日本, ハイフン無し）である。
            false：電話番号（日本, ハイフン無し）でない。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpFixedLinePhoneNumber(System.String)">
            <summary>指定された文字列が固定電話番号（日本）であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：固定電話番号（日本）形式である。
            false：固定電話番号（日本）形式でない。
            </returns>
            <remarks>
            ＜総務省＞
            電話番号に関するＱ＆Ａ
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/q_and_a-2001aug.html
            電気通信番号指定状況－固定電話の電話番号
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/fixed.html
            ※ FMC（Fixed Mobile Convergence）は含まず。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpFixedLinePhoneNumber_Hyphen(System.String)">
            <summary>指定された文字列が固定電話番号（日本, ハイフン有り）であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：固定電話番号（日本, ハイフン有り）である。
            false：固定電話番号（日本, ハイフン有り）でない。
            </returns>
            <remarks>
            ＜総務省＞
            電話番号に関するＱ＆Ａ
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/q_and_a-2001aug.html
            電気通信番号指定状況－固定電話の電話番号
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/fixed.html
            ※ FMC（Fixed Mobile Convergence）は含まず。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpFixedLinePhoneNumber_NoHyphen(System.String)">
            <summary>指定された文字列が固定電話番号（日本, ハイフン無し）であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：固定電話番号（日本, ハイフン無し）である。
            false：固定電話番号（日本, ハイフン無し）でない。
            </returns>
            <remarks>
            ＜総務省＞
            電話番号に関するＱ＆Ａ
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/q_and_a-2001aug.html
            電気通信番号指定状況－固定電話の電話番号
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/fixed.html
            ※ FMC（Fixed Mobile Convergence）は含まず。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpCellularPhoneNumber(System.String)">
            <summary>指定された文字列が携帯電話番号（日本）であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：携帯電話番号（日本）形式である。
            false：携帯電話番号（日本）形式でない。
            </returns>
            <remarks>
            ＜総務省＞
            電話番号に関するＱ＆Ａ
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/q_and_a-2001aug.html
            電気通信番号指定状況
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/number_shitei.html
            電気通信サービスＦＡＱ（よくある質問）－６．電話番号について
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/d_faq/6Telephonenumber.htm
            ※ 020はポケベル、060はFMC、070はPHS、080・090は携帯、11桁。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpCellularPhoneNumber_Hyphen(System.String)">
            <summary>指定された文字列が携帯電話番号（日本, ハイフン有り）であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：携帯電話番号（日本, ハイフン有り）である。
            false：携帯電話番号（日本, ハイフン有り）でない。
            </returns>
            <remarks>
            ＜総務省＞
            電話番号に関するＱ＆Ａ
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/q_and_a-2001aug.html
            電気通信番号指定状況
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/number_shitei.html
            電気通信サービスＦＡＱ（よくある質問）－６．電話番号について
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/d_faq/6Telephonenumber.htm
            ※ 020はポケベル、060はFMC、070はPHS、080・090は携帯、11桁。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpCellularPhoneNumber_NoHyphen(System.String)">
            <summary>指定された文字列が携帯電話番号（日本, ハイフン無し）であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：携帯電話番号（日本, ハイフン無し）である。
            false：携帯電話番号（日本, ハイフン無し）でない。
            </returns>
            <remarks>
            ＜総務省＞
            電話番号に関するＱ＆Ａ
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/q_and_a-2001aug.html
            電気通信番号指定状況
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/number_shitei.html
            電気通信サービスＦＡＱ（よくある質問）－６．電話番号について
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/d_faq/6Telephonenumber.htm
            ※ 020はポケベル、060はFMC、070はPHS、080・090は携帯、11桁。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpIpPhoneNumber(System.String)">
            <summary>指定された文字列がIP電話番号（日本）であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：IP電話番号（日本）形式である。
            false：IP電話番号（日本）形式でない。
            </returns>
            <remarks>
            ＜総務省＞
            電話番号に関するＱ＆Ａ
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/q_and_a-2001aug.html
            電気通信番号指定状況
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/number_shitei.html
            電気通信サービスＦＡＱ（よくある質問）－６．電話番号について
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/d_faq/6Telephonenumber.htm
            ※ IP電話は050から始まる11桁。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpIpPhoneNumber_Hyphen(System.String)">
            <summary>指定された文字列がIP電話番号（日本, ハイフン有り）であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：IP電話番号（日本, ハイフン有り）である。
            false：IP電話番号（日本, ハイフン有り）でない。
            </returns>
            <remarks>
            ＜総務省＞
            電話番号に関するＱ＆Ａ
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/q_and_a-2001aug.html
            電気通信番号指定状況
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/number_shitei.html
            電気通信サービスＦＡＱ（よくある質問）－６．電話番号について
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/d_faq/6Telephonenumber.htm
            ※ IP電話は050から始まる11桁。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatChecker.IsJpIpPhoneNumber_NoHyphen(System.String)">
            <summary>指定された文字列がIP電話番号（日本, ハイフン無し）であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：IP電話番号（日本, ハイフン無し）である。
            false：IP電話番号（日本, ハイフン無し）でない。
            </returns>
            <remarks>
            ＜総務省＞
            電話番号に関するＱ＆Ａ
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/q_and_a-2001aug.html
            電気通信番号指定状況
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/top/tel_number/number_shitei.html
            電気通信サービスＦＡＱ（よくある質問）－６．電話番号について
            http://www.soumu.go.jp/main_sosiki/joho_tsusin/d_faq/6Telephonenumber.htm
            ※ IP電話は050から始まる11桁。
            </remarks>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Str.FloorToward">
            <summary>切り捨て処理の方向</summary>
            <remarks>
            ・0への丸め (rounding toward zero; RZ)
            ・負の無限大への丸め (rounding toward minus infinity; RM)
            </remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.FloorToward.RZ">
            <summary>rounding toward zero（0への丸め：絶対値・一般）</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.FloorToward.RM">
            <summary>rounding toward minus infinity（負の無限大への丸め：大小・算術）</summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Str.CeilingToward">
            <summary>切り上げ処理の方向</summary>
            <remarks>
            ・無限大への丸め (rounding toward infinity; RI)
            ・正の無限大への丸め (rounding toward plus infinity; RP)
            </remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.CeilingToward.RI">
            <summary>rounding toward infinity（無限大への丸め：絶対値・一般）</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.CeilingToward.RP">
            <summary>rounding toward plus infinity（正の無限大への丸め：大小・算術）</summary>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Str.FormatConverter">
            <summary>文字列書式の変換処理クラス</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatConverter.Round_Banker(System.Object,System.Int32)">
            <summary>
            小数点数以下ｘ桁最近接偶数編集
            </summary>
            <param name="number">数値</param>
            <param name="digitsAfterDecimalPoint">小数点数以下の桁数</param>
            <returns>小数点数以下ｘ桁最近接偶数編集後の文字列</returns>
            <remarks>
            ＠IT > .NET TIPS > 数値を四捨五入するには？［2.0のみ、C#、VB］
            http://www.atmarkit.co.jp/fdotnet/dotnettips/700mathround/mathround.html
            小数点を切り捨て、切り上げ、四捨五入する .NET Tips C#, VB.NET
            http://dobon.net/vb/dotnet/programing/round.html
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatConverter.Round_4sya5nyu(System.Object,System.Int32)">
            <summary>
            小数点数以下ｘ桁四捨五入編集
            </summary>
            <param name="number">数値</param>
            <param name="digitsAfterDecimalPoint">小数点数以下の桁数</param>
            <returns>小数点数以下ｘ桁四捨五入編集後の文字列</returns>
            <remarks>
            ＠IT > .NET TIPS > 数値を四捨五入するには？［2.0のみ、C#、VB］
            http://www.atmarkit.co.jp/fdotnet/dotnettips/700mathround/mathround.html
            小数点を切り捨て、切り上げ、四捨五入する .NET Tips C#, VB.NET
            http://dobon.net/vb/dotnet/programing/round.html
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatConverter.Floor(System.Object,System.UInt32)">
            <summary>
            小数点数以下ｘ桁切り捨て（負の無限大への丸め：大小）
            </summary>
            <param name="number">数値</param>
            <param name="digitsAfterDecimalPoint">小数点数以下の桁数</param>
            <returns>小数点数以下ｘ桁切り捨て編集後の文字列</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatConverter.Floor(System.Object,System.UInt32,Touryo.Infrastructure.Public.Str.FloorToward)">
            <summary>
            小数点数以下ｘ桁切り捨て
            </summary>
            <param name="number">数値</param>
            <param name="digitsAfterDecimalPoint">小数点数以下の桁数</param>
            <param name="ft">切り捨て処理の方向</param>
            <returns>小数点数以下ｘ桁切り捨て編集後の文字列</returns>
            <remarks>
            ＠IT > .NET TIPS > 数値の切り捨て／切り上げを行うには？［C#、VB］
            http://www.atmarkit.co.jp/fdotnet/dotnettips/703mathfloorceiling/mathfloorceiling.html
            小数点を切り捨て、切り上げ、四捨五入する .NET Tips C#, VB.NET
            http://dobon.net/vb/dotnet/programing/round.html
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatConverter.Ceiling(System.Object,System.UInt32)">
            <summary>
            小数点数以下ｘ桁切り上げ（正の無限大への丸め：大小）
            </summary>
            <param name="number">数値</param>
            <param name="digitsAfterDecimalPoint">小数点数以下の桁数</param>
            <returns>小数点数以下ｘ桁切り上げ編集後の文字列</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatConverter.Ceiling(System.Object,System.UInt32,Touryo.Infrastructure.Public.Str.CeilingToward)">
            <summary>
            小数点数以下ｘ桁切り上げ
            </summary>
            <param name="number">数値</param>
            <param name="digitsAfterDecimalPoint">小数点数以下の桁数</param>
            <param name="ct">切り上げ処理の方向</param>
            <returns>小数点数以下ｘ桁切り上げ編集後の文字列</returns>
            <remarks>
            ＠IT > .NET TIPS > 数値の切り捨て／切り上げを行うには？［C#、VB］
            http://www.atmarkit.co.jp/fdotnet/dotnettips/703mathfloorceiling/mathfloorceiling.html
            小数点を切り捨て、切り上げ、四捨五入する .NET Tips C#, VB.NET
            http://dobon.net/vb/dotnet/programing/round.html
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatConverter.AddZerosAfterDecimal(System.Decimal,System.UInt32)">
            <summary>小数点以下に、指定桁数まで０を補充</summary>
            <param name="dcm">decimalデータ</param>
            <param name="digitsAfterDecimalPoint">小数点以下</param>
            <returns></returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatConverter.AddFigure3(System.Object)">
            <summary>３桁区切りの文字列に変換</summary>
            <param name="number">数値</param>
            <returns>
            ３桁区切りの数値文字列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatConverter.AddFigure4(System.Object)">
            <summary>４桁区切りの文字列に変換</summary>
            <param name="number">数値</param>
            <returns>
            ４桁区切りの数値文字列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatConverter.AddFigureX(System.Object,System.Int32)">
            <summary>ｘ桁区切りの文字列に変換</summary>
            <param name="number">数値</param>
            <param name="numberGroupSizes">ｘ桁区切りのｘ（数値）</param>
            <returns>
            ｘ桁区切りの数値文字列
            </returns>
            <remarks>
            数値をｘけた区切りの文字列に変換するには？
            http://www.atmarkit.co.jp/fdotnet/dotnettips/620number3groupsep/number3groupsep.html
            http://www.atmarkit.co.jp/fdotnet/dotnettips/622number4groupsep/number4groupsep.html
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatConverter.Suppress(System.String,System.Int32,System.Char)">
            <summary>指定の文字で、桁数にあわせてサプレスする</summary>
            <param name="input">入力文字列</param>
            <param name="totalWidth">サプレスする桁</param>
            <param name="paddingChar">サプレスする文字</param>
            <returns>サプレスされた文字列</returns>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.FormatConverter._unixEpoch">
            <summary>unix epochをDateTimeで表した定数</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatConverter.ToUnixTime(System.DateTime)">
            <summary>DateTimeをUNIX時間に変換するメソッド</summary>
            <param name="dateTime">DateTime</param>
            <returns>UNIX時間</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatConverter.FromUnixTime(System.Int64)">
            <summary>UNIX時間からDateTimeに変換するメソッド</summary>
            <param name="unixTime">long</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatConverter.SeirekiToWareki(System.DateTime,System.String)">
            <summary>西暦（DateTime）を和暦文字列に変換する。</summary>
            <param name="seireki">西暦（DateTime）</param>
            <param name="warekiPattern">
            和暦パターン文字
            
            　書式指定子  説明            出力例 
            -------------+----------------+---------------
            ・gg         | 元号名         | 平成
                         |                |
            ・y          | 年             | n or nn 
            ・yy         | 0埋め2桁の年   | 0n or nn
                         |                |
            ・M          | 月             | n or nn
            ・MM         | 0埋め2桁の月   | 0n or nn
                         |                |
            ・d          | 日             | n or nn
            ・dd         | 0埋め2桁の日   | 0n or nn
                         |                |
            ・ddd        | 曜日の省略名   | 火
            ・dddd       | 曜日の完全名   | 火曜日
                         |                |
            ・H          | 時間           | n or nn（24時間表記）  
            ・HH         | 0埋め2桁の時間 | 0n or nn（24時間表記）  
            ・h          | 時間           | n or nn（12時間表記）
            ・hh         | 0埋め2桁の時間 | 0n or nn（12時間表記）
            ・tt         | 午前 / 午後    | 午前 or 午後
                         |                | 
            ・m          | 分             | n or nn
            ・mm         | 0埋め2桁の分   | 0n or nn
            ・s          | 秒             | n or nn
            ・ss         | 0埋め2桁の秒   | 0n or nn
            -------------+----------------+---------------
            </param>
            <returns>和暦文字列</returns>
            <example>
            FormatConverter.SeirekiToWareki(
                DateTime.Parse("1977/4/24"), "ggy年M月d日（ddd）");
            </example>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.FormatConverter.WarekiToSeireki(System.String,System.String)">
            <summary>和暦文字列を西暦（DateTime）に変換する。</summary>
            <param name="wareki">和暦文字列</param>
            <param name="warekiPattern">
            和暦パターン文字
            
            　書式指定子  説明            出力例 
            -------------+----------------+---------------
            ・gg         | 元号名         | 平成
                         |                |
            ・y          | 年             | n or nn 
            ・yy         | 0埋め2桁の年   | 0n or nn
                         |                |
            ・M          | 月             | n or nn
            ・MM         | 0埋め2桁の月   | 0n or nn
                         |                |
            ・d          | 日             | n or nn
            ・dd         | 0埋め2桁の日   | 0n or nn
                         |                |
            ・ddd        | 曜日の省略名   | 火
            ・dddd       | 曜日の完全名   | 火曜日
                         |                |
            ・H          | 時間           | n or nn（24時間表記）  
            ・HH         | 0埋め2桁の時間 | 0n or nn（24時間表記）  
            ・h          | 時間           | n or nn（12時間表記）
            ・hh         | 0埋め2桁の時間 | 0n or nn（12時間表記）
            ・tt         | 午前 / 午後    | 午前 or 午後
                         |                | 
            ・m          | 分             | n or nn
            ・mm         | 0埋め2桁の分   | 0n or nn
            ・s          | 秒             | n or nn
            ・ss         | 0埋め2桁の秒   | 0n or nn
            -------------+----------------+---------------
            </param>
            <returns>西暦（DateTime）</returns>
            <example>
            FormatConverter.WarekiToSeireki(
                "昭和52年4月24日（日）", "ggy年M月d日（ddd）")
            </example>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Str.JIS2k4Checker">
            <summary>JIS2004追加文字をチェックするクラス</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.JIS2k4Checker._JIS2k4Chars">
            <summary>JIS2004追加文字のキャラクタ配列</summary>
            <remarks>
            ＜参考資料＞
            JIS X 0213:2004 対応と新日本語フォント「メイリオ」について
            http://www.microsoft.com/japan/windows/products/windowsvista/jp_font/default.mspx
            「Microsoft Windows Vista および Windows Server 2008 における
             JIS X 0213:2004 (JIS2004) 対応について」(Version 1.2)
            ↓
            「MSゴシック明朝V5.00フォントアップデート情報.pdf」
            ↓
            「MSゴシックファミリー・MS明朝ファミリー バージョン5.00（Windows Vista）で追加された文字」
            ※ ４バイト文字（サロゲート ペア文字）を除く
            </remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Str.JIS2k4Checker._JIS2k4String">
            <summary>JIS2004追加文字の文字列</summary>
            <remarks>４バイト文字（サロゲート ペア文字）を除く</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.JIS2k4Checker.#ctor">
            <summary>コンストラクタ</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Str.JIS2k4Checker.JIS2k4Chars">
            <summary>JIS2004追加文字のキャラクタ配列を返す。</summary>
            <remarks>４バイト文字（サロゲート ペア文字）を除く</remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Str.JIS2k4Checker.JIS2k4String">
            <summary>JIS2004追加文字の文字列を返す。</summary>
            <remarks>４バイト文字（サロゲート ペア文字）を除く</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.JIS2k4Checker.GetStringInfo(System.String,System.Int32@,System.Int32@,System.Int32@)">
            <summary>指定した文字列の文字列情報を取得する。</summary>
            <param name="input">入力文字列</param>
            <param name="s_length">指定した文字列の文字数（サロゲート ペア文字未対応）</param>
            <param name="si_length">指定した文字列の文字数（サロゲート ペア文字対応）</param>
            <param name="byte_length">UTF-16（Unicode）でのバイト長</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.JIS2k4Checker.CheckSurrogatesPairChar(System.String)">
            <summary>
            指定した文字列中に、JIS2004の
            ４バイト文字（サロゲート ペア文字）
            が含まれているかどうか確認する。
            </summary>
            <param name="input">入力文字列</param>
            <returns>
            true：含まれている。
            false：含まれていない。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.JIS2k4Checker.CheckSurrogatesPairChar(System.String,System.Int32@)">
            <summary>
            指定した文字列中に、JIS2004の
            ４バイト文字（サロゲート ペア文字）
            が含まれているかどうか確認する。
            （最初に見つかった文字列のインデックスを返す）
            </summary>
            <param name="input">入力文字列</param>        
            <param name="index">
            ４バイト文字（サロゲート ペア文字）が
            見つかった文字列の最初のインデックス
            （見つからなかった場合は、-1を返す。）
            </param>
            <returns>
            true：含まれている。
            false：含まれていない。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.JIS2k4Checker.DeleteSurrogatesPairChar(System.String)">
            <summary>
            指定した文字列からJIS2004の
            ４バイト文字（サロゲート ペア文字）を削除する。
            </summary>
            <param name="input">入力文字列</param>
            <returns>
            指定した文字列からJIS2004の４バイト文字
            （サロゲート ペア文字）を削除した文字列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.JIS2k4Checker.DeleteSurrogatesPairChar(System.String,System.Char)">
            <summary>
            指定した文字列からJIS2004の
            ４バイト文字（サロゲート ペア文字）
            を指定の文字で置換する。
            </summary>
            <param name="input">入力文字列</param>
            <param name="replaceChar">置換文字</param>
            <returns>
            指定した文字列からJIS2004の
            ４バイト文字（サロゲート ペア文字）
            を指定の文字で置換した文字列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.JIS2k4Checker.DeleteSurrogatesPairChar(System.String,System.String)">
            <summary>
            指定した文字列からJIS2004の
            ４バイト文字（サロゲート ペア文字）
            を指定の文字列で置換する。
            </summary>
            <param name="input">入力文字列</param>
            <param name="replaceString">置換文字列</param>
            <returns>
            指定した文字列からJIS2004の
            ４バイト文字（サロゲート ペア文字）
            を指定の文字列で置換した文字列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.JIS2k4Checker.CheckCharAddedWithJIS2k4(System.String)">
            <summary>
            指定した文字列中に、JIS2004追加文字
            が含まれているかどうか確認する。
            </summary>
            <param name="input">入力文字列</param>
            <returns>
            true：含まれている。
            false：含まれていない。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.JIS2k4Checker.CheckCharAddedWithJIS2k4(System.String,System.Int32@)">
            <summary>
            指定した文字列中に、JIS2004追加文字
            が含まれているかどうか確認する。
            （最初に見つかった文字列のインデックスを返す）
            </summary>
            <param name="input">入力文字列</param>        
            <param name="index">
            JIS2004追加文字が見つかった文字列の最初のインデックス
            （見つからなかった場合は、-1を返す）
            </param>
            <returns>
            true：含まれている。
            false：含まれていない。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.JIS2k4Checker.DeleteCharAddedWithJIS2k4(System.String)">
            <summary>
            指定した文字列から
            JIS2004追加文字を削除する。
            </summary>
            <param name="input">入力文字列</param>
            <returns>
            指定した文字列から
            JIS2004追加文字を削除した文字列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.JIS2k4Checker.DeleteCharAddedWithJIS2k4(System.String,System.Char)">
            <summary>
            指定した文字列からJIS2004追加文字
            を指定の文字で置換する。
            </summary>
            <param name="input">入力文字列</param>
            <param name="replaceChar">置換文字</param>
            <returns>
            指定した文字列からJIS2004追加文字
            を指定の文字で置換した文字列
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.JIS2k4Checker.DeleteCharAddedWithJIS2k4(System.String,System.String)">
            <summary>
            指定した文字列からJIS2004追加文字
            を指定の文字列で置換する。
            </summary>
            <param name="input">入力文字列</param>
            <param name="replaceString">置換文字列</param>
            <returns>
            指定した文字列からJIS2004追加文字
            を指定の文字列で置換した文字列
            </returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Str.StringChecker">
            <summary>
            正規表現を用いた文字列チェック処理クラス
            </summary>
            <remarks>
            必要であれば、（生技）から提供している
            ＜方式設計アシスト＞
            DMSG-0083:.NETに於ける正規表現、概要
            を参照し、必要なメソッドを追加下さい。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.IsNumbers(System.String)">
            <summary>指定された文字列が、数字のみで構成されているかどうか確認する。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：数字のみで構成されている。
            false：数字のみで構成されていない。
            </returns>
            <remarks>
            数値チェックという意味ではParse、TryParse
            メソッドを使用すべきかどうかも検討下さい。
            空文字列が指定された場合は、trueが返ります。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.IsNumbers_Hankaku(System.String)">
            <summary>指定された文字列が、数字（半角）のみで構成されているかどうか確認する。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：数字（半角）のみで構成されている。
            false：数字（半角）のみで構成されていない。
            </returns>
            <remarks>
            数値チェックという意味ではParse、TryParse
            メソッドを使用すべきかどうかも検討下さい。
            空文字列が指定された場合は、trueが返ります。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.IsNumbers_Zenkaku(System.String)">
            <summary>指定された文字列が、数字（全角）のみで構成されているかどうか確認する。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：数字（全角）のみで構成されている。
            false：数字（全角）のみで構成されていない。
            </returns>
            <remarks>
            数値チェックという意味ではParse、TryParse
            メソッドを使用すべきかどうかも検討下さい。
            空文字列が指定された場合は、trueが返ります。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.IsHankaku(System.String)">
            <summary>指定された文字列が、半角文字のみで構成されているかどうか確認する。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：半角文字のみで構成されている。
            false：半角文字のみで構成されていない。
            </returns>
            <remarks>空文字列が指定された場合は、trueが返ります。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.IsZenkaku(System.String)">
            <summary>指定された文字列が、全角文字のみで構成されているかどうか確認する。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：全角文字のみで構成されている。
            false：全角文字のみで構成されていない。
            </returns>
            <remarks>空文字列が指定された場合は、trueが返ります。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.IsAlphabet(System.String)">
            <summary>指定された文字列が、英字のみで構成されているかどうか確認する。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：英字のみで構成されている。
            false：英字のみで構成されていない。
            </returns>
            <remarks>空文字列が指定された場合は、trueが返ります。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.IsAlphabet_Hankaku(System.String)">
            <summary>指定された文字列が、英字（半角）のみで構成されているかどうか確認する。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：英字（半角）のみで構成されている。
            false：英字（半角）のみで構成されていない。
            </returns>
            <remarks>空文字列が指定された場合は、trueが返ります。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.IsAlphabet_Zenkaku(System.String)">
            <summary>指定された文字列が、英字（全角）のみで構成されているかどうか確認する。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：英字（全角）のみで構成されている。
            false：英字（全角）のみで構成されていない。
            </returns>
            <remarks>空文字列が指定された場合は、trueが返ります。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.IsHiragana(System.String)">
            <summary>指定された文字列が平仮名であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：平仮名である。
            false：平仮名でない。
            </returns>
            <remarks>空文字列が指定された場合は、trueが返ります。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.IsKatakana(System.String)">
            <summary>指定された文字列が片仮名であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：片仮名である。
            false：片仮名でない。
            </returns>
            <remarks>空文字列が指定された場合は、trueが返ります。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.IsKatakana_Zenkaku(System.String)">
            <summary>指定された文字列が片仮名（全角）であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：片仮名（全角）である。
            false：片仮名（全角）でない。
            </returns>
            <remarks>空文字列が指定された場合は、trueが返ります。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.IsKatakana_Hankaku(System.String)">
            <summary>指定された文字列が片仮名（半角）であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：片仮名（半角）である。
            false：片仮名（半角）でない。
            </returns>
            <remarks>空文字列が指定された場合は、trueが返ります。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.IsKanji(System.String)">
            <summary>指定された文字列が漢字であるか。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：漢字である。
            false：漢字でない。
            </returns>
            <remarks>空文字列が指定された場合は、trueが返ります。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.IsInCodePage(System.String,System.Int32)">
            <summary>
            指定された文字列が、
            ・当該コードページのみで構成されており
            ・可逆エンコード可能かどうか？
            を確認する。
            </summary>
            <param name="input">
            入力文字列
            </param>
            <param name="codePageNum">
            エンコーディングに使用するコードページ
            </param>
            <returns>
            true：当該コードページの可逆エンコードな文字で構成されている。
            false：当該コードページの可逆エンコードな文字で構成されていない。
            </returns>
            <remarks>
            指定コードページのエンコーディング
            を使用した可逆チェックを使用して判定する。
            空文字列が指定された場合は、trueが返ります。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.IsShift_Jis(System.String)">
            <summary>指定された文字列が、SJIS文字のみで構成されているかどうか確認する。</summary>
            <param name="input">入力文字列</param>
            <returns>
            true：SJIS文字のみで構成されている。
            false：SJIS文字のみで構成されていない。
            </returns>
            <remarks>
            SJISエンコーディングの可逆チェックを使用して判定する。
            空文字列が指定された場合は、trueが返ります。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.IsShift_Jis_Zenkaku(System.String)">
            <summary>
            指定された文字列が、SJIS全角
            （にエンコーディング可能な）文字
            のみで構成されているかどうか確認する。
            </summary>
            <param name="input">入力文字列</param>
            <returns>
            true：SJIS全角文字のみで構成されている。
            false：SJIS全角文字のみで構成されていない。
            </returns>
            <remarks>
            SJISエンコーディングを使用して判定する。
            .NET TIPS > 文字列の全角／半角をチェックするには？
            http://www.atmarkit.co.jp/fdotnet/dotnettips/014strcheck/strcheck.html
            空文字列が指定された場合は、trueが返ります。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.IsShift_Jis_Hankaku(System.String)">
            <summary>
            指定された文字列が、SJIS半角
            （にエンコーディング可能な）文字
            のみで構成されているかどうか確認する。
            </summary>
            <param name="input">入力文字列</param>
            <returns>
            true：SJIS半角文字のみで構成されている。
            false：SJIS半角文字のみで構成されていない。
            </returns>
            <remarks>
            SJISエンコーディングを使用して判定する。
            .NET TIPS > 文字列の全角／半角をチェックするには？
            http://www.atmarkit.co.jp/fdotnet/dotnettips/014strcheck/strcheck.html
            空文字列が指定された場合は、trueが返ります。
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.Match(System.String,System.String)">
            <summary>
            RegexクラスとMatchクラスを使用して、
            正規表現のパターン マッチングを実行する。
            </summary>
            <param name="input">入力文字列</param>
            <param name="pattern">正規表現パターン</param>
            <returns>
            true：一致した。
            false：一致しなかった。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            RegexクラスとMatchクラスを使用して、
            正規表現のパターン マッチングを実行する。
            </summary>
            <param name="input">入力文字列</param>
            <param name="pattern">正規表現パターン</param>
            <param name="options">オプション</param>
            <returns>
            true：一致した。
            false：一致しなかった。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.Matches(System.String,System.String)">
            <summary>
            RegexクラスとMatchCollectionクラスを使用して、
            正規表現のパターン マッチングを実行する。
            </summary>
            <param name="input">入力文字列</param>
            <param name="pattern">正規表現パターン</param>
            <returns>
            一致のコレクション
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringChecker.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            RegexクラスとMatchCollectionクラスを使用して、
            正規表現のパターン マッチングを実行する。
            </summary>
            <param name="input">入力文字列</param>
            <param name="pattern">正規表現パターン</param>
            <param name="options">オプション</param>
            <returns>
            一致のコレクション
            </returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Str.StringConverter">
            <summary>文字列の変換処理クラス</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringConverter.EditYYYYMMDDString(System.String@)">
            <summary>MやDが１桁の場合に、YYYYMMDDに変換</summary>
            <param name="text">
            YYYYMMDDに変換する、
            ・YYYYMMD
            ・YYYYMDD
            ・YYYYMD
            などの文字列。
            </param>
            <returns>
            true：変換した場合。
            false：変換しなかった場合。
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Str.StringConverter.FormattingForOneLineLog(System.String)">
            <summary>
            1行ログ出力用整形。
            
            （１）
            以下の文字を半角空白に変換する。
            キャリッジリターン文字とラインフィード文字
            '\r\n'
            キャリッジリターン文字
            '\r'
            ラインフィード文字
            '\n'
            
            （２）
            ２文字以上連続する
            半角スペース・タブ（\t）は削除する。
            （ただし、文字列中は、詰めない。）
            </summary>
            <param name="text">テキスト</param>
            <returns>処理後のテキスト</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Util.CustomMarshaler">
            <summary>カスタム マーシャリング機能を提供する。</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.CustomMarshaler.BytesToStructure(System.Byte[],System.Type)">
            <summary>
            「Unmanage構造体」のバイト表現を
            「Manage構造体」へマーシャリング
            </summary>
            <param name="bytes">「Unmanage構造体」のバイト表現</param>
            <param name="cStructureType">「Manage構造体」の型</param>
            <returns>「Manage構造体」</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.CustomMarshaler.BytesToStructures(System.Byte[],System.Type,System.Int32)">
            <summary>
            「Unmanage構造体」配列のバイト表現を
            「Manage構造体」配列へマーシャリング
            </summary>
            <param name="bytes">「Unmanage構造体」配列のバイト表現</param>
            <param name="cStructureType">「Manage構造体」の型</param>
            <param name="count">「Manage構造体」の要素数</param>
            <returns>「Manage構造体」配列</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.CustomMarshaler.StructureToBytes(System.Object)">
            <summary>
            「Manage構造体」を「Unmanage構造体」
            のバイト表現へマーシャリング
            </summary>
            <param name="cStructure">「Manage構造体」</param>
            <returns>「Unmanage構造体」のバイト表現</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.CustomMarshaler.StructuresToBytes(System.Object[],System.Int32)">
            <summary>
            「Manage構造体」配列を
            「Unmanage構造体」配列の
            バイト表現へマーシャリング
            </summary>
            <param name="cStructures">「Manage構造体」配列</param>
            <param name="count">「Manage構造体」の要素数</param>
            <returns>「Unmanage構造体」配列のバイト表現</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.CustomMarshaler.StringFromPrimitivetype(System.Object,System.Boolean)">
            <summary>
            To converts all premitive data to string data.
            </summary>
            <param name="primitiveType">Column data type</param>
            <param name="checkType">Check sting Type data</param>
            <returns>returns String data</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.CustomMarshaler.PrimitivetypeFromString(Touryo.Infrastructure.Public.Dto.DTType,System.String)">
            <summary>
            To converts all string data to premitive Type by colType and cellString.
            </summary>
            <param name="colType">Column data type</param>
            <param name="cellString">Cell data</param>
            <returns>return Premitive type object</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Util.GetConfigParameter">
            <summary>設定ファイルから、パラメータを取得する機能を提供する。</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.GetConfigParameter._configuration">
            <summary>IConfiguration</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.GetConfigParameter.Configuration">
            <summary>IConfiguration</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.GetConfigParameter.InitConfiguration(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>IConfigurationの初期化</summary>
            <param name="configuration">IConfiguration</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.GetConfigParameter.InitConfiguration(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>IConfigurationの初期化</summary>
            <param name="builder">IConfigurationBuilder</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.GetConfigParameter.InitConfiguration(System.String)">
            <summary>IConfigurationの初期化</summary>
            <param name="jsonFileName">string</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.GetConfigParameter.InitConfiguration">
            <summary>IConfigurationの初期化</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.GetConfigParameter.GetAnyConfigValue(System.String)">
            <summary>
            設定ファイルに定義されている任意の値を取得する
            </summary>
            <param name="key">設定ファイルに定義されているJSONキー</param>
            <returns>設定ファイルに定義されている値</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.GetConfigParameter.GetAnyConfigSection(System.String)">
            <summary>
            設定ファイルに定義されている任意のセクションを取得する
            </summary>
            <param name="key">設定ファイルに定義されているキー名</param>
            <returns>設定ファイルに定義されているセクション</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.GetConfigParameter.GetConfigSection(System.String)">
            <summary>
            設定ファイルのappSettingsタグに定義されているセクションを取得する
            </summary>
            <param name="key">設定ファイルに定義されているキー名</param>
            <returns>設定ファイルに定義されているセクション</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.GetConfigParameter.GetConfigValue(System.String)">
            <summary>
            設定ファイルのappSettingsタグに定義されている値を取得する
            </summary>
            <param name="key">設定ファイルに定義されているキー名</param>
            <returns>設定ファイルに定義されている値</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.GetConfigParameter.GetConnectionString(System.String)">
            <summary>
            設定ファイルのconnectionStringsタグに定義
            されているデータベースへの接続文字列を取得する
            </summary>
            <param name="key">設定ファイルに定義されているキー名</param>
            <returns>設定ファイルに定義されている接続文字列</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Util.Latebind">
            <summary>レイトバインド処理クラス</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.Latebind.MyFlg">
            <summary>レイトバインド時に指定するフラグ</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.Latebind.InvokeMethod(System.String,System.String,System.String,System.Object[])">
            <summary>遅延バインド（メソッド）</summary>
            <param name="assemblyName">アセンブリ名（名前かファイルパス指定）</param>
            <param name="className">クラス名（名前空間を含む）</param>
            <param name="methodName">メソッド名</param>
            <param name="paramSet">パラメタのセット</param>
            <returns>戻り値</returns>
            <remarks>自由に利用できる（メソッドがない場合、例外をスロー）。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.Latebind.InvokeMethod_NoErr(System.String,System.String,System.String,System.Object[])">
            <summary>遅延バインド（メソッド）</summary>
            <param name="assemblyName">アセンブリ名（名前かファイルパス指定）</param>
            <param name="className">クラス名（名前空間を含む）</param>
            <param name="methodName">メソッド名</param>
            <param name="paramSet">パラメタのセット</param>
            <returns>戻り値</returns>
            <remarks>自由に利用できる（メソッドがなくても、例外をスローしない）。。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.Latebind.InvokeMethod(System.Object,System.String,System.Object[])">
            <summary>遅延バインド（メソッド）</summary>
            <param name="objectClass">オブジェクト</param>
            <param name="methodName">メソッド名</param>
            <param name="paramSet">パラメタのセット</param>
            <returns>戻り値</returns>
            <remarks>自由に利用できる（メソッドがない場合、例外をスロー）。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.Latebind.InvokeMethod_NoErr(System.Object,System.String,System.Object[])">
            <summary>遅延バインド（メソッド）</summary>
            <param name="objectClass">オブジェクト</param>
            <param name="methodName">メソッド名</param>
            <param name="paramSet">パラメタのセット</param>
            <returns>戻り値</returns>
            <remarks>自由に利用できる（メソッドがなくても、例外をスローしない）。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.Latebind.CheckTypeOfBaseClass(System.Type,System.Type)">
            <summary>型のベース型が一致しているかチェック</summary>
            <param name="classType">型</param>
            <param name="baseType">ベース型</param>
            <returns>
            true:一致
            false：不一致
            </returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.Latebind.CheckTypeOfMethodByName(System.Object,System.String)">
            <summary>
            当該オブジェクトに指定のメソッドが存在するかチェックする。
            </summary>
            <param name="obj">当該オブジェクト</param>
            <param name="methodName">メソッド名</param>
            <returns>
            ・true：存在する。
            ・false：存在しない。
            </returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Util.ObjectInspector">
            <summary>オブジェクトのプロパティ分析クラス</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.ObjectInspector.ExclusionFullyQualifiedNameParts">
            <summary>除外する完全修飾名の一部</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.ObjectInspector.DateTimeFormat">
            <summary>DateTimeのFormat</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.ObjectInspector.Inspect(System.Object)">
            <summary>オブジェクトのプロパティ分析</summary>
            <param name="obj">分析対象オブジェクト</param>
            <returns>分析結果</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.ObjectInspector.GetObjectInfo(System.Object,System.Int32@)">
            <summary>インスペクト処理メソッド</summary>
            <param name="obj">オブジェクト</param>
            <param name="norc">再帰呼出数</param>
            <returns>文字列化したプロパティの情報</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Util.PerformanceRecorder">
            <summary>パフォーマンス測定クラス</summary>
            <remarks>
            自由に利用できる。
            
            以下の測定項目を記録する。
            ●実行時間
            ●CPU時間
            　・CPU（カーネル）時間
            　・CPU（ユーザ）時間
            
            記録方式に、以下の方式を利用できる。
            ●ファイル出力
            ●カウンタ出力
            
            精度について
            ●実行時間  ⇒ 高分解能パフォーマンスカウンタカウンタの周波数（更新頻度）にあわせた精度で取得する。
            ●CPU時間   ⇒ 0001年1月1日午前12:00から経過した100ns間隔のタイマ刻み数だが、10msec前後の誤差あり。
            </remarks>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PerformanceRecorder._stopwatch">
            <summary>System.Diagnostics.Stopwatch</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PerformanceRecorder._ExecTime">
            <summary>
            実行時間
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PerformanceRecorder._CpuTime">
            <summary>
            CPU時間
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PerformanceRecorder._CpuKernelTime">
            <summary>
            CPUカーネル モード時間
            </summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PerformanceRecorder._CpuUserTime">
            <summary>
            CPUユーザ モード時間
            </summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.PerformanceRecorder.StartsPerformanceRecord">
            <summary>測定開始メソッド</summary>
            <returns>処理が成功した場合：True、失敗した場合：False</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.PerformanceRecorder.EndsPerformanceRecord">
            <summary>測定終了メソッド</summary>
            <returns>処理が成功した場合：結果文字列、失敗した場合：エラーメッセージ</returns>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PerformanceRecorder.ExecTime">
            <summary>実行時間（ミリ秒）</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PerformanceRecorder.CpuTime">
            <summary>CPU時間（ミリ秒）</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PerformanceRecorder.CpuKernelTime">
            <summary>CPUカーネル モード時間（ミリ秒）</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PerformanceRecorder.CpuUserTime">
            <summary>CPUユーザ モード時間（ミリ秒）</summary>
            <remarks>自由に利用できる。</remarks>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Util.PubCmnFunction">
            <summary>Public層の共通クラス</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.PubCmnFunction.GetPropsFromPropString(System.String)">
            <summary>プロパティ文字列からプロパティ名・値の組を取得</summary>
            <param name="propString">プロパティ文字列</param>
            <returns>プロパティ名・値（ディクショナリ）</returns>
            <remarks>
            プロパティ文字列のフォーマット
            [property=value[;property=value]] 
            
            [ property ]、[ value ]に[ = ]、[ ; ]が混じる場合は、
            { }で囲い（ {=}、{;} ）エスケープできる。
            ただし、{ }のエスケープはできない。
            ※ 特殊文字は、=、;、{、}
            </remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.PubCmnFunction.ThrowPropStringFormatException(System.String)">
            <summary>プロパティ文字列のフォーマット エラー</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.PubCmnFunction.GetCommandArgs(System.Char,System.Collections.Generic.Dictionary{System.String,System.String}@,System.Collections.Generic.List{System.String}@)">
            <summary>
            コマンドライン引数を取得する。
            </summary>
            <param name="prefixChar">
            コマンドの接頭文字
            </param>
            <param name="argsDic">
            コマンドライン引数のコマンド＆値
            （コマンドは全て大文字に揃える）
            </param>
            <param name="valsLst">
            コマンドライン引数の値
            </param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.PubCmnFunction.BuiltStringIntoEnvironmentVariable(System.String)">
            <summary>環境変数名入り文字列に、環境変数値を組み込む。</summary>
            <param name="builtString">環境変数名入り文字列</param>
            <returns>環境変数値を組み込んだ文字列</returns>
            <remarks>環境変数名は、環境変数名入り文字列中に、%環境変数名%と指定する。</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.PubCmnFunction.GetCurrentMethodName">
            <summary>カンレントMethod名を取得する。</summary>
            <returns>カンレントMethod名</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.PubCmnFunction.GetCurrentPropertyName">
            <summary>カンレントProperty名を取得する。</summary>
            <returns>カンレントProperty名</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.PubCmnFunction.GetCurrentCodeInfo(System.String@,System.String@,System.String@)">
            <summary>カンレント・コード情報を取得する。</summary>
            <param name="filePath">ファイル・パス</param>
            <param name="fileLineNumber">ファイル行数</param>
            <param name="methodSignature">メソッド・シグネチャ</param>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.PubCmnFunction.GetFileNameNoEx(System.String,System.Char)">
            <summary>拡張子無しのファイル名を取得する</summary>
            <param name="str">ファイル名を含むパス</param>
            <param name="divChar">パスの分割文字</param>
            <returns>拡張子無しのファイル名</returns>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.PubCmnFunction.ShortenByteArray(System.Byte[],System.Int32)">
            <summary>バイト配列の切り詰め</summary>
            <param name="bytes">バイト配列</param>
            <param name="newSize">バイト配列のサイズ</param>
            <returns>指定のサイズに切り詰められたバイト配列</returns>
            <remarks>暗号化のキー作成等で使用</remarks>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.PubCmnFunction.GetLongFromByte(System.Byte[])">
            <summary>バイトデータを数値（Int64）データに変換</summary>
            <param name="bytData">バイトデータ（byte[]（8 byte以内））</param>
            <returns>数値（Int64）データ</returns>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubCmnFunction.UNIX_EPOCH">
            <summary>UNIXエポック</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.PubCmnFunction.ToUnixTime(System.DateTimeOffset)">
            <summary>DateTimeOffset.ToUnixTimeSeconds代替(net46未満で使用)</summary>
            <param name="targetTime">DateTimeOffset</param>
            <returns>UnixTimeSeconds</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Util.PublicExceptionMessage">
            <summary>Public層の例外メッセージに使用する文字列定数を定義する定数クラス</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.NO_CONFIG">
            <summary>コンフィグに指定がありません。</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.SWITCH_ERROR">
            <summary>スイッチの指定が不正です。</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.COMMANDTIMEOUT_ERROR">
            <summary>CommandTimeoutの指定が不正です。</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.RESOURCE_FILE_NOT_FOUND">
            <summary>リソース ファイルがみつからない</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.XML_DECLARATION_ERROR">
            <summary>XML宣言が不正です</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.XML_ELEMENT_ERROR">
            <summary>XMLエレメントが不正です</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.XML_ELEMENT_ERROR_LOG4NET">
            <summary>XMLエレメントが不正です（log4net）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.ZIP_PASSWORD">
            <summary>解凍パスワードの指定なし</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.LATEBIND_ERROR0">
            <summary>レイトバインドでエラー（０）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.LATEBIND_ERROR1">
            <summary>レイトバインドでエラー（１）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.LATEBIND_ERROR2">
            <summary>レイトバインドでエラー（２）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.LATEBIND_ERROR3">
            <summary>レイトバインドでエラー（３）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.DB_ISO_LEVEL_PARAM_ERROR_UC">
            <summary>無効な分離レベル[ReadUncommitted]</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.DB_ISO_LEVEL_PARAM_ERROR_RR">
            <summary>無効な分離レベル[RepeatableRead]</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.DB_ISO_LEVEL_PARAM_ERROR_SS">
            <summary>無効な分離レベル[Snapshot]</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.DB_ISO_LEVEL_PARAM_ERROR_USR">
            <summary>無効なパラメタ[User]</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.DB_ISO_LEVEL_PARAM_ERROR_NC">
            <summary>無効なパラメタ[NotConnect]</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.THIS_DPQ_TAG_IS_UNKNOWN">
            <summary>不正なタグのエラー</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.DPQ_TAG_FORMAT_ERROR">
            <summary>タグのフォーマットエラー</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.DPQ_TAG_NAME_ATTR_NOT_EXIST">
            <summary>タグのフォーマットエラー（name属性が設定されていません（null））</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.DPQ_TAG_NAME_ATTR_VALUE_IS_EMPTY">
            <summary>タグのフォーマットエラー（name属性が設定されていません（空文字列））</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.DPQ_TAG_VALUE_ATTR_NOT_EXIST">
            <summary>タグのフォーマットエラー（value属性が設定されていません（null））</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.DPQ_TAG_INNER_PARAM_NOT_EXIST">
            <summary>タグのフォーマットエラー（タグ内パラメタが設定されていません）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.PARAM_TAG_ERROR">
            <summary>PARAMタグの型変換エラー</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.PARAM_TAG_TYPE_ERROR">
            <summary>PARAMタグの型変換エラー（型不正）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.PARAM_TAG_VALUE_ERROR">
            <summary>PARAMタグの型変換エラー（値不正）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.DPQ_SET_ONLY_NULL_OR_BOOL_TO_INNER_PARAM_VALUE">
            <summary>ｘｘタグのフォーマットエラー（ｘｘタグのタグ内パラメタはnull値 or Boolean値のみ）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.DPQ_ELSE_TAG_DOESNT_EXIST_WHEN_TEXT_PARAM_OF_IF_TAG_IS_NULL">
            <summary>IFタグのフォーマットエラー（テキストパラメタがnullであるのに、ELSEタグが見つからない）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.DPQ_ELSE_TAG_DOESNT_EXIST_WHEN_INNER_PARAM_OF_IF_TAG_IS_NULL">
            <summary>IFタグのフォーマットエラー（タグ内パラメタがnullであるのに、ELSEタグが見つからない）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.DPQ_ELSE_TAG_DOESNT_EXIST_WHEN_INNER_PARAM_OF_IF_TAG_IS_FALSE">
            <summary>IFタグのフォーマットエラー（タグ内パラメタがfalseであるのに、ELSEタグが見つからない）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.ORDER_BIND_ERROR_PARAMETER_NOT_FOUND">
            <summary>順番バインド置き換え時のパラメタ設定不足</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.PROP_STRING_FORMAT_ERROR">
            <summary>プロパティ文字列のフォーマット不正</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.PROP_STRING_FORMAT_ERROR_START_CHARACTER">
            <summary>プロパティ文字列のフォーマット不正（開始文字不正）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.PROP_STRING_FORMAT_ERROR_ESCAPE_CHARACTER">
            <summary>プロパティ文字列のフォーマット不正（エスケープ文字不正）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.PROP_STRING_FORMAT_ERROR_CURLY_BRACE">
            <summary>プロパティ文字列のフォーマット不正（中括弧不正）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.PROP_STRING_FORMAT_ERROR_PROPERTY_NAME_IS_EMPTY">
            <summary>プロパティ文字列のフォーマット不正（プロパティ名が空）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.PROP_STRING_FORMAT_ERROR_PROPERTY_VALUE_IS_EMPTY">
            <summary>プロパティ文字列のフォーマット不正（プロパティ値が空）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.PROP_STRING_FORMAT_ERROR_DELIMITER_OF_PROPERTY_NAME">
            <summary>プロパティ文字列のフォーマット不正（プロパティ名の区切り文字不正）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.PROP_STRING_FORMAT_ERROR_DELIMITER_OF_PROPERTY_VALUE">
            <summary>プロパティ文字列のフォーマット不正（プロパティ値の区切り文字不正）</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.NOT_INITIALIZED">
            <summary>未初期化</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.ARGUMENT_INCORRECT">
            <summary>引数不正</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.PARAM_IS_NULL">
            <summary>パラメタがnullの場合</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.NOT_IMPLEMENTED">
            <summary>NotImplementedExceptionの場合</summary>
        </member>
        <member name="P:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.NOT_SUPPORTED">
            <summary>NotSupportedExceptionの場合</summary>
        </member>
        <member name="M:Touryo.Infrastructure.Public.Util.PublicExceptionMessage.CmnFunc(System.String)">
            <summary>Returns the specified string resource for the specified culture or current UI culture. </summary> 
            <param name="key">resource key</param> 
            <returns>resource string</returns>
        </member>
        <member name="T:Touryo.Infrastructure.Public.Util.PubLiteral">
            <summary>Public層のリテラルのクラス</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.SQL_CACHE_SWITCH">
            <summary>SQLキャシュ機能のON / OFFを設定する。</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.SQL_TRACELOG">
            <summary>SQLトレース ログ出力のON / OFFを設定する。</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.SQL_ENCODING">
            <summary>SQLのエンコーディングを設定する。</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.SQL_COMMANDTIMEOUT">
            <summary>SQLのCommandTimeout値を設定する。</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.SQL_DOTNET_TYPEINFO">
            <summary>SQLの型指定方法を設定する。</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.LOG4NET_CONF_FILE">
            <summary>log4netのコンフィグファイルを設定する。</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.EXCEPTIONMESSAGECULTUER">
            <summary>国際化対応のスイッチ（例外メッセージ）</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.ON">
            <summary>ON / OFFのON</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.OFF">
            <summary>ON / OFFのOFF</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.VALUE_STR_TRUE">
            <summary>Boolean：true</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.VALUE_STR_FALSE">
            <summary>Boolean：false</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.VALUE_STR_NULL">
            <summary>null</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.DPQ_TAG_ROOT">
            <summary>ROOTタグ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.DPQ_TAG_VAL">
            <summary>VALタグ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.DPQ_TAG_INSCOL">
            <summary>INSCOLタグ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.DPQ_TAG_IF">
            <summary>IFタグ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.DPQ_TAG_ELSE">
            <summary>ELSEタグ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.DPQ_TAG_SELECT">
            <summary>SELECTタグ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.DPQ_TAG_CASE">
            <summary>CASEタグ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.DPQ_TAG_DEFAULT">
            <summary>DEFAULTタグ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.DPQ_TAG_LIST">
            <summary>LISTタグ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.DPQ_TAG_JOIN">
            <summary>JOINタグ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.DPQ_TAG_SUB">
            <summary>SUBタグ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.DPQ_TAG_WHERE">
            <summary>WHEREタグ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.DPQ_TAG_DELCMA">
            <summary>DELCMAタグ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.DPQ_TAG_PARAM">
            <summary>PARAMタグ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.DPQ_TAG_DIV">
            <summary>DIVタグ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.DPQ_TAG_TEXT">
            <summary>#textタグ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.DPQ_TAG_COMMENT">
            <summary>#commentタグ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.DPQ_TAG_CDATA">
            <summary>#cdata-sectionタグ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.SPQ_PARAM_TAG_START">
            <summary>静的の場合のPARAMタグ（開始）</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.SPQ_PARAM_TAG_END">
            <summary>静的の場合のPARAMタグ（終了）</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.SQLTRACELOG_COMMAND_TEXT_HEADER">
            <summary>SQLTracelogのコマンドテキストのヘッダ</summary>
        </member>
        <member name="F:Touryo.Infrastructure.Public.Util.PubLiteral.SQLTRACELOG_COMMAND_PARAM_HEADER">
            <summary>SQLTracelogのコマンドパラメタのヘッダ</summary>
        </member>
    </members>
</doc>
